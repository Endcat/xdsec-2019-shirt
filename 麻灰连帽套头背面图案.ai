%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Sijiong Qian) ()
%%Title: (.ai)
%%CreationDate: 12/8/2019 2:26 PM
%%Canvassize: 16383
%%BoundingBox: 373 179 1883 1614
%%HiResBoundingBox: 373.5 179.2072 1882.5 1613.0356
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 1112 834 1112 834
%AI3_TileBox: 715.5 528.5 1507.5 1140.5
%AI3_DocumentPreview: None
%AI5_ArtSize: 1816 1658
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 4
%AI8_OpenToView: -14.5 1774.5 0.5 1457 888 18 0 0 158 146 0 0
%AI5_OpenViewLayers: 7777
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 124 8
%%BeginData: 18155 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD41FFCBFD76FFCFFFCFFFCFFFCFFFA8FFA8A9A8FFA8FFA8FD6CFF
%CFFFFFFFCFFD05FFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FD5CFFCFFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFFFCFFFA8FFA8A9A8FFA8A9A8FF
%A8A8A8FFA8A8A8FFA8FFA8FD52FFCFFFFFFFCFFFFFFFCFFD07FFCFFD0BFF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFCFC9CFCACFCFFD44FFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFFCFFFCFFFCFFFFFFFCFFF
%CFFFA8A9A8FFA8A9A8FFA8A9A8FFA8FFA8FFA8A9A8FFC9C29FC8C2C8A0C9
%C8CFCAFD3CFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFFFFFCFFFCFFF
%CFFFFFFFCFFFCFFFFFFFCFFFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFC8C8C2C8C8C8C2C9C9C8CFFD34FFCFFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFFF
%CFFFCFFFA8A8A8FFA8A9A8FFA8FFA8FFA8A8A8FFA8A8A8C9A0C8A0C8A0C8
%A7C99FC9FD3FFFCFFD0BFFCFFFFFFFCFFFFFFFCFFD07FFCFFFFFFFCFFFFF
%FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFC9C8C2C9C8C8C8CFC8C8C2
%CFFD35FFCFFFCFFFCFFFCFFFFFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFD
%05FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFA8FFA8FFA8A9A8FFA8A9
%A8FFA8A9A8CFC2C8A0C8C2C9C9C8C2C8A0FD34FFCFFFFFFFCFFFFFFFCFFD
%07FFCFFFFFFFCFFFFFFFCFFD07FFCFFFFFFFCFFFFFFFCFFD07FFA8FFFFFF
%A8FFA8FFA8FFA8FFA8FFA8FFA8C9C2C8C2C8C9C9C2C8C8C9CAFD34FFCAFF
%CFFFCAFFCFFFCAFFFFFFCAFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFA8FF
%A8FFA8FFA8FFCFFFCFFFCFFFCFFFCFFFA8FFA8A9A8FFA8FFA8FFA8A9A8FF
%A8FFA7C8A0C8A0C99FC8A0C9A0CFFD33FFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFD05FFA9FFA8FFA8FFA8FFA9FFA9FD09FFA8
%FFA8FFA8FFA8FFFFFFA8FFA8FFA9CFC8C8C2CFC8C8C8C9C8C9CFFD34FFCF
%FFCFFFCFFFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8
%A9A8FFA8A9A8FFA8A9A8FFA8AFA8FFA8FFA8FFA8A9A8FFA8FFA8FFA8A9A8
%FFA8A9A8C9C2C8C9C8C2C9A6C9C9CFFD33FFCFFFCFFFFFFFCFFFA9FFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD05FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFFFFFA8FFFFFFA8FFA9FFA8FFA8FFA8FFA8FFC9C8C9C9C8CFC9C9
%C8C8C9FD32FFCAFFCFFFCAFFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCFFFA8A9A8FFA8A9A8FFA8A9A8FFA8FFA8FFA8A8A8FF
%A8FFA8FFA8A9A8FFA8A9A8FFA8CAA0C9C9CFA7C89FC89FC9FD35FFCFFFFF
%FFA8FD0BFFCFFD0FFFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA9FFA8FFA8FFA9
%FFFFFFA8FFA8FFA8FFA8FFA8CFFFCFC8C9C9C9C8C8C9FD32FFCFFFCFFFCF
%FFA8A8A8FFCFFFCFFFCFFFFFFFCFFFCFFFCFFFCFFFFFFFCFFFCFFFCFFFFF
%FFA8FFA8A9A8FFA8A9A8FFFFFFA8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFCAC9C2C89FC8C8C9C8CFFD33FFCFFFFFFFA8FFA8FFA8FFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFD07FFCFFFFFFFA8FFA8FFA8FFA8FFFFFFA8FF
%A8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFCAC9C1C8C2C8C8C9C9FD34FF
%CFFFCFFFA8A8A8FFA8A9A8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFA8A9A8FFA8A9A8FFFFFFA8FFA8FFA8FFA8A8A8FFA8A9A8FF
%A8A8A8FFA9FFA6C8C1C8A0CAA8FFA8FFA8FD36FFA8FFA8FFFFFFA8FD0BFF
%CFFFFFFFCFFFFFFFCFFD09FFA8FFA8FFFFFFA8FFA8FFFFFFA8FFA8FFA8FF
%A8FFA8FFA8FFFFCFC8C9C9CFA8FFA9FFA8FFA8FD36FFA8FFA8A9A8FFA8A9
%A8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFFFFFCFFFCFFFFFFFCFFFA8FF
%A8FFA8FFA8A9A8FFA8FFA8FFA8FFA8FFA8A9A8FFA8FFFFFFCAFFA8FFA8A9
%A8FFA8A9A8FFA8FD34FFA8FFA8FFA8FFA8FFA8FD05FFCFFFFFFFCFFD07FF
%A8FFFFFFCFFD07FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FD
%07FFA8FFA8FFA8FFA8FFA8FD34FFA8FFA8A9A8FFA8FFA8FFA8FFCFFFCFFF
%CAFFCFFFCFFFCFFFA8FFA8A8A8FFCFFFCAFFCFFFCAFFCFFFA8FFA8A9A8FF
%A8A9A8FFA8FFA8FFA8A9A8FFA8FFA8FFA8FFA8A9A8FFA9FFA8A8A8FFA8A9
%A8FD34FFA8FFA8FFFFFFA8FFA8FD0DFFA8FFA8FFA8FFA9FFCFFFFFFFCFFD
%07FFA8FFA8FFA8FD05FFA8FD05FFA8FFA8FFFFFFA8FFFFFFCFFFAFFFA8FF
%A8FD34FFA8FFA8A9A8FFA8A8A8FFA8FFCFFFCFFFCFFFCFFFA8FFA8A8A8FF
%A8A9A8FFA8FFCFFFCFFFCFFFCFFFCFFFFFFFA8FFA8A9A8FFA8FFA8FFFFFF
%A8FFA8A9A8FFA8FFA8FFA8A8A1A7A1A8A8FFA8A9A8FD34FFA8FFA8FD05FF
%A8FFA8FD05FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFCFFFFFFFCFFFCFFF
%A8FFFFFFA8FD07FFA8A7A8FFA8FFA8FFA8FFA8FFA9FF7DCA7DA7A1A7A8FF
%AFFD22FFA7FD11FFA8A8A8FFA8FFA8FFA8A8A8FFA8FFCFFFFFFFA8FFA8A8
%A8FFA8A9A8FFA8A9A8FFAEFFCAFFCFFFCAFFA8A8A8FFA8A9A8FFA8FFA8FF
%A8A176A1A8AFA8FFA8FFA8FFA8FF7DA1A1A776A77D7D7DCAA8FD0FFFCFFD
%05FFCAFD09FFCFC8C9CFFD11FFA8FFA8FFFFFFA8FFA8FFA8FFA8FD07FFA8
%FFA8FFA8FFA8FFA8FFA8FD05FFCFFFFFFFA8FFA8FFFFFFA8FFA8FFFFA87C
%A77DA8FFFFA8FFA9FFA8FFA8A17DA7A8A77DA8A7A17DFD10FFC9C8C9C9CF
%CFC9FD09FFC9CAC9CAC9C9A0CFFD0CFFA9A9A8FFFFFFA8FFA8FFA8FFA8A9
%A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8A9A8FFA8FFCFFFCFFFA8FFA8A9A8FF
%A8FFA8FFA8A9A8A87CA17CA17CA8A8FFA8FFA8FFA8A77CA17CA87DA17DA8
%76A8A7FD0DFFCAFFC8C89FC8C9C9A0FD06FFC9C9C9FFCFCFC9CEC9C9C2FD
%0DFFA8FD05FFA8FD09FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FD05FF
%A8FFA8FFA8FFA8FFA8FFFFA87CA17DA17DA17DFFA8FFFFFFA9CF7DA17CA1
%A1A87CA8A1A7A8A7FD0CFFC9C8C9C9C2C8C9CEC2C8CFFD06FF9FC2A0C9C9
%CAA8FFCFFFA8CFFFA8A8FD07FFA8FFA8FFA8FFA8FFA8FFA8A9A8FFAFFFA8
%FFA8A9A8FFA8FFA8FFA8A9A8FFA8A9A8FFA8FFCFFFA8FFA8FFA8FFA8FFA8
%FFA9A87CA17CA17CA17CA17DFFA8FFA8FF7DA8A1A17CA1A7A1A1A1A8A17C
%FD0BFFA7C89FCAA0C8C9C99FC8C2CFA6FFFFFFCFCFFFC2C8C8C8C2C8C8C9
%FFCFC8CFA7A7A1CAFD06FFA8FFA8FFA8FFA8FD05FFA8A87DCAFFFFA8FFA8
%FFFFFFA8FFA8FFA8FFA9FFCACAA7FFA7A1A1A8A1A7A1A8A7A7A8FF7DA1A1
%A7A1A7A1A8A7A8A8FFFFFFA8A8CAA8A7CAA1A8A1A8A8A87CA7FD06FFC9CF
%C9C9C8CFC9C8C9C9C9CFC2C8C8C9CAC8C8FFFFC8C9FFCF9FC8C2C89FC8CA
%C99FC8A7A1A1A17CA1A1FFFFFFA8FFA8A9A8FFA8FFA8CAA1A17CA17C7DA1
%FFA8A9A8FFFFFFA8FFA8A9A8FFA8A8A1A17C7D7DCAA17D7CA17CA17CA17C
%FFA8A8A1A8A1A8A1A8A1A8A1A7A8FFA8A8A1A77DA17DA8A7A8A8CA7CA17D
%FFCAC9A0FD06C9C8A0FD04C9CFC2C8A0C8C2CFA0C8C8FFFFCAFFFFCFC2C8
%C2C8C9C9C8C9CAFFA8A7A1A17DA17CA8A8FD05FFA8A8A1A17CA17DA17DA1
%7DA8AFFFA8FFFFFFA8FFA8FFFFCFA7A77DA17CA17DA17CCAA7A17CA17DA1
%7DCAA7FFA8CAA7A17CA17DA17CA17DCAA8CFA8A1A1A77DA17CA7CAFFA1A7
%7DA1A8FFC9C8C2C8C8C9C9CFC9CFC9FFFFCFC2C8C8C8C2CFCAC8C2C8C9FD
%04FFCAC99FC8CACFA7FFCFCFA7CFA8A87CA17CA17DA8A8A8A1A77CA176A1
%7CA17CA17CA17CA1A1FFA8FFFFA9A8FFA8CFA1A77C7D7CA17CA17CA17CA1
%7CA8A1A17CA17CA87DA17DA87DA8A8A8A1A17C7D7CA1A7FFA8A17CA77CA1
%7C7D7DA87CA1A1CFA1A17DFFC9C89FC89FC8A0C9CAA8A8CFA0C89FC8C9FF
%FFCFA0C9A7CFFD04FFCFC9CFCAFFCFCFC8C8C2C8C9CFCAFFA8FFA8CAA1A1
%7CA17DA17DA77DA17DA77DA17DA77DA8AFFFFFFFA8FFA8A77DA17DA17DA7
%7DA17DA77DA17DA77DA8A8A77DA8A1A17DA1A1CA7DA1A1CAA8CAA7A87DA8
%FFCA7DA7A1A17DA1A1FFA1A17DA1A8CAA8CAA8FFC9C8C9CFCFFFA8A7A7CF
%C2C8C8CFFD0DFFCFC9CAFFFFFFC9CAC9C8A0C8C9C8C8FFFFA87DA17CA17C
%A17CA17CA17CA17CA17CA17CA17DFFFFFFA8A8A1A77DA17DA77DA17CA17D
%A17CA17CA17CA17CA7A7A7A17D7CA17CA17DA87CA17CA17DA8A7A8A8CA7C
%A17DA77CA17DCA7DA17CA17CA87D7D7DA7A7CFCAFFFFA87DA1A1CF9FC8C9
%FD16FFCACFCFFFC9CFC9C8C2CEFFFFA8CAA1A17CA17DA17DA17DA17DA17D
%A17CA7CFFFA8A7A7A8A7CAA8CAA8CAA8CFA8CACAFFA8CFA8CAA8CAA8FFFF
%A8A1A77CA17DA1A1A87DA17DA17DA17DFFA1A17CA8A1A17DCFA1A17DA17D
%A1A1A87DA17CA17DA7A8FFA1A1A1CFC8C9CFFD18FFA7C9C9CAA8FFC2C89F
%C8C9FFA8CAA8A87DA17CA17CA17CA17CA17CA17CA87DA8A1A17CA17CA17C
%A17CA17DA1A1CF7DA17DA77DA17DA77DA17DA7A8A87DA17CA17DA77CA17C
%A17CA8A1A17C7D7DA17CA87DA17CA17CA17CA1A1A17CA1A1A8A8A8A1CAA8
%CFC9FD1EFFC9CFFFCFC2C9C8C8C8CFA8A8A8FFCACAA1A17DA17DA77DA17D
%A7A8A17DCFA8A77CA77DA17DA77DA1A1CF7DA17DA17DA17DA17DA17DA17D
%A1A1CFA8A77CA1A7A87CA77DA7A8A17DA17CCAA1CAA7A17DA17DA77DA17C
%CFA8CAA8CAA1A17CA1A7FD25FFC99FC8C2C8C8FFA8A17CA8A8FFA8A87DA1
%7CA17CA17CCF7DA17CA8A8A77CA17CA17CA1A1CF7CA17CA17CA17CA17CA1
%7CA17CA17CA17CA7A8A87DA1A1A77CA1A8A17CA17CA1A1A8A7A17CA17CA1
%7CA17DA1A8FFA8A8A1A8A1A7A1CAFD25FFCFCFCAFD06FFCA7CA17DA8A8FF
%A8A87DA17DA1A8A87DA17CA7A8A87DA17DA1A1FFA1A17DA17DA17DA17DA1
%7DA17DA17DA17DA17CA1A1CAA8FD04A7A87DA17CA17DCFA7A17DA1A1A8A8
%CFA8FD3CFFA1A87DA17DA8A8FFA8A77DCF7DA17C7D76A1A1A87CA1A1CF7C
%A17CA17CA17CA17CA17CA17CA17CA17CA17C7D76A17CA1A7A8A8A876A17D
%A17DA8A8A8A1CFA8FD46FFCACACAFD05FFA1A8A1A8A1A7A7FFA8CF7DA1A1
%A77DA7A1A7A1A7A1A7A1A8A1A8A1A8A7A8A1A8A7A8A7CACAFFA8FD46FFCA
%CAFD1AFFCACAA8FFA8FFA8FFCAFFA8FD25FFA8FD33FFCFC8FD7EFFA8C8C9
%FD49FFA8FD34FFC2C9FD48FFA8FD34FFCAC8C2CFFD46FFA8A8A8FD33FFCF
%C2C8C8FD47FFA8FD34FFCAC8A0C8A1A7FD1EFFA8CFA7A8A1FD20FFAFA8FF
%A8FD33FFCFC2C8C8C97DA8FD1DFFA77DA17CA8A8FD1FFFA8FD36FFCAC8A0
%C8C2A77CA7FD1CFFA1A17CA1A7A7A7FD1BFFA8FFA8A9A8FFA8FD33FFCFC2
%C8C2C8C9A77CA7FD19FFA8A7CF7DA17CCFA7A1CAFD19FFA8FFA8FFA8FFA8
%FD34FFA8C9C8C89FC8A17D76A1CAFD16FFA87CA8A8A17CA1A8A87CA1CFFD
%17FFA8FFA8A9A8FFA8A8A8FD34FFA7CACACAC9CFA1A17DFD04A8FFCFFD0F
%FFCFFFA1A1A8FFA1A17DFFA7A17CCAFD16FFA8FFFFFFA8FFA8FD36FFA8A7
%7CA87DA1A8A77CA17CCAA8A17CA17DA7A1A8A8FFCAFD07FFA7A17DA77CA8
%A1A87CA1FFA87CA1A8FFA8FD0DFFA8FFA8FFA8FFA8A9A8FFA8A9A8FFA8FF
%A8FD33FFCFA7A1A7A77DA87DA1A1FFA8A8A8A77DA17CA17DA1A1CA7DA7A1
%A8A8CF7DA17DA7A1A1A8A7A7A1A1FFA1A1A1FFA8FFA8FD05FFA8FFA9FFA8
%FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FD34FFA8A17DA7A1A77CA7A8
%A87DA17CA7A8A77CA17CA17CA1A8A77C7D76A1A1A17CA17DA87CCA7CA87C
%A7A8A776A8FFA9A8FFA8A8A8FFA8A9A8FFA8A9A8FFA8FFA8FFA8A8A8FFA8
%FFA8FFA8A8A8FFA8FD34FF7DCAA1CAA7CFA8A77CA17DA17CA8A8A87CA77D
%A17CCFFFA77CA77DA8A7A17DA7A7A7A8A1A7A8A7FFA1A7A8FFA8FFA8FFA8
%FFA8FFFFFFA8FFA8FFFFFFA8FFA8FFA8FD07FFA8FFA8FD34FFA8A1A1A7A8
%FFA1A17CA17CA17CA17CA1A8A87CA17CA17DFFA8A17CA17DCA7CA17DA77D
%A87CA7A1A8A8A17DFFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8A8A8FFA8FFA8FFA8FD34FF7DA1A1CAA1A8A7A87DA17DA17DA17C
%A1A8A87CA17DA1A8FFA8A17CA1A8A87CA7A1A8A7A1A1CAA7CAA1CAA8FFA8
%FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA9FFA8FFA8FFA8FFA8FFA9
%FD34FFA8A17CA7A7A77CA1A1A8A1A17CA17CA17CA1A7A87CA17CA8A8FFA8
%7D76A8A8A17CA7A1A87CA1A8A8A1A8A8FFA8A9A8FFA8FFA8A9A8FFA8FFA8
%FFA8A8A8FFA8A9A8FFA8A8A8FFA8FFA8FFA8CAA7FD34FF7DA17DFFA8A17D
%A1A1A8A8A8A1A17DA77DA1A7FFA1A1A1FFA8FFA7A1A1FFA7A1A1CAA1A17D
%FFA8A8CAFFA8FFA8FD05FFA8FFFFFFA8FFA8FFA8FFA8FFA9FFA8FFA8FFFF
%FFA8CFA7A77DA1CFFD32FFA8A17CA1A7FF7CA17CA17CA1A1CAA7A17CA17C
%A1A1FF7D7DA8FFA8FFA1A1A8FF7CA7A8A77CA7A8A7A1FFA8FFA8FFFFFFA8
%FFA8FFA8FFA8A9A8FFA8FFA8FFA8FFA8FFA8CAA7A87DA17CA17CA17CFD34
%FF7CA17DA7CFCAA8A8A1A7A1A17DA8A8A87DA17DA1A1FFA1A7A8FFA8FF7D
%A8FFA87DCFA1A1A7CAA1A8A9FD05FFA8FFA8FFFFFFA8FFA8FFA8FD05FFA8
%CAA1A77DA17CA17DA17DA17DA1A8FD32FFA8A17CA17CA87DA1A1A8A1A8A7
%A8A1A7A7CFA7A17C7D7CCFA1A8A8FFA8FF7DFFA8A7A8FD04A1A8A8AFA8FF
%A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8CAA8A77DA17C7D7CA17CA17CA17CA1
%7CA17CCAFD33FF7DA17DA1A1CA7DA17CA17DA7A1A8A7A8A8FFFFCFA1A17D
%CFFD04FFA9FFA8FFFFFFA1CA7CCAA8FFA8FFFFFFA8FD05FFA8FFA8FFFFFF
%A7A8A1A17CA17DA17CA17DA17DA77DA17DA77DA1A8FD33FFA87DA17CA1A8
%A77CA17CA17C7D7CA7A7CAA8FFFFFFA8A77CA8FD04FFA8FFFFFFA8A87DA1
%A7FFA8A8A8FFA8A8A8FFFFFFA8FFFFFFA8A8A1A7A1CAA8CAA8A8A7A8A1A7
%7DA17CA17CA17CA17CCAFD32FFCFC9CFA7A17CA8A8A17DA17CA7A7CFFFFF
%A9FFA8FFA8FFFFFFA1A8A8FFA8FFA8FFFFFFA1A17DFFFFFFA9FFA8FFA8FD
%07FFA1A17CA7A7A8A7CAFFA8A1CAA8CAA8CFA8CFA8CAA8A8A1A8A8FD32FF
%A8C8C2C9A8A87DA87CA17DA8A8FFA8A9A8FFA8A9A8FFA8A8A8FFA8CFA8FF
%A8FFA8CAA17D76A1A8FFA8FFA8FFA8FFA8A9A8FFA8A77CA1A1A8A1A77CA1
%A7A17C7D7CA17C7D7CA17DA7A1CFFFFFA8FD34FFC8C8C2C9C9CFA8FFA8FF
%FFFFA8FFA8FFA8FFA8FFFFFFA8FFA8FD07FFA8A8A7A8A7FFA8FFFFFFA8FF
%A8FFA8FFA8A8A1CAA8A87DA17DA7A8A77DA17DA17DA17DA8A7CAA8CAA7A7
%7DA1A8FD32FFCAC8C2C8A0C8C8CAFFFFA8A8A8FFA8A9A8FFA8A9A8FFA8A9
%A8FFA8FFA8FFA8A8A8FFA8FFFFFFA8FFA8FFA8A9A8FFA8FFA8A8A1A77CA1
%7CA17CA7A8A17CA17DA1A1A8A7A8A1A87DA17CA17CA17CCFFD32FFCFC2C8
%C8C8C2C8C2C9CAFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FF
%A8FFFFFFA8FFA9FFA8FFA8FFCBFFCAA77CA17CA17CA17DA7A7A7A1A8A7CA
%A8A8A1A77DA17CA17DA17DA17DA1A8FD32FFCAC8A0C8A0C8A0C89FC8A0CF
%AFFFA8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A8A8FFA8A9A8FFA8FFA8FFA8A8
%A8FFA8A9A8FFA8A8A1A7A1A7A1A8A8A8A1A87DA17CA17CA17CA17CA17CA1
%7CA17CA17CA8FD32FFCFC2C8C8C8C2C9C8C8C2C8C8CECFFFA9FFA8FFA8FF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FD09FFCBFFA8FD09FFCAFFA8CAA7A8A1A8
%A1A17DA77DA17CA17DA17DA77DA1A8FD32FFCAC8A0C8C2C8A0C8C2C8A0C8
%C1C8C9FFAFAFA8FFA8A9A8FFA8A9A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8A9A8FFFFFFA8FFA8FFA8A8A1A17DA7A7A8A7CAA8A8A1A8A1A77DA1
%7DA17CA17CA8FD33FFC8C8C2C8C2C8C2C8C8C8C2C8C2C8C8CFFFFFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FD07FFA8FFA8FFA8FFA8FFA8FD05FFA8FFA8FFA8
%CAA1A17CA17CA8A7A77DA8A7A8A7CAA8A8A1A8A8FD32FFA8C9C9C9A7C9C2
%C89FC8A0C8A0C8A0C89FC9CAFFA8FFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8
%FFA8FFA8FFA8A9A8FFA8A9A8FFA8A8A8FFA8A8A8FFA8FFA8A8A1A176A1A1
%A77CA17CA17CA17DA17DCAFD33FFC8C8C8CEC9CFC9CFC9C9C8C8C2C8C2C8
%C2C8C9FFFFFFA8FD07FFA8FD05FFA8FD05FFA8FFA8FFA8FFFFFFA8FFFFFF
%A8FFA8FFA8FFFFCFA8CAA1A17DA8A7A17CA77DA17CA7FD34FFCFC1C89FC8
%C2C8A0C9C9CAC9CFC9C9A0C8C2C89FC9CFFFA8FFA8FFA8FFA8A9A8FFC9FF
%A8FFA8FFFFFFA8FFA8FFA8A9A8FFFFFFA8FFA8FFA8FFA8A9A8FFA8A1A1A8
%A8A87DA7A1A77CA17CA1A8FD35FFC9C2C8C2C8C8C9C8C9C9CAC9CFC9CFC9
%CFC9C9C2C8C9FFAFFFFFFFA8FFA8FFC9C9FFFFA8FFA8FFCAFFFFFFA8FFA8
%FFA8FFFFFFA8FFCAA8A8FFA8FFA8FFA1A17CA7A7CAA8CAA8A87DA1A1FD36
%FFA7C9C9CAA7CAC9C9A7C9C2C8A0C9C8C9A7FFFFCFA7C9C9FFAFFFA8A8A8
%FFC9C8A7FFA8A9A8FFA8A8A8FFA8FFA8FFA8A9A8FFA8A8A8FF7CA1A8FFFD
%04A87CA17CA17CA1A1CAA8FFA1CFFD39FFCACFC9C9C9CFC9C9C9CFFD07C9
%CFCAC9CAFFFFFFA8FFCFC8C8CAA8FFA8FFFFFFA1CAFFFFA9FFCBFFA8FFA8
%FFA8FFFFA87CA7A8FFA8FFCFA77DA77DA17DA17DA8FD3CFFCFA0C8C2C8A0
%C8C2C89FC8C1C89FC8C8C9C8FD04C9FFA8FFA8C8C1C97DCAA8A9A8FFA8A8
%7CCFA9A8A8FFA8A9A8FFA8FFA8FFA7A17CA1A1FFA8FFA1A17CA17CA17CA8
%A8FD3EFFC9C9C2C8C2C8C8C8C2C8C8C9C9CFC9C9C8C8C8FFA8FFCFC9C2C8
%C9A1A8FFA8FFA8A8A8A17DFFFFFFA8FFFFFFA8FFFFFFA8FFA1A17DA1A1FF
%A9FF7DA17DA1A1CAFD41FFCAC9A0C89FC8A0C9A7CFC9C9A0C8A0C89FC9A8
%A9A8C99FC8C2A87CFFA8FFA8A87CCA7C7D7DFFA8FFA8FFA8FFA8FFAFA9A8
%A77CA17CA17DA8A9A77C7D7DFD45FFCFC8C9C9FFFFFFC9C9C2C8C8C8C2C9
%FFFFFFC9C2C8C2CFA1A1A8FFA8FFA7A1A8A77DA1A7CAA1CFFFFFAFFFA8FF
%AFFFA7A17DA77DA17DCFA8A8A8FD48FFCAFFC9C9A0C8C2C8A0C8C2C8C9FF
%A9C99FC8C2C8A7A17DFFA8FFA9A77CCF7DA17CA1A8A776A7A8FFA8FFA8FF
%A8CA7CA17CA17C7D7DFD4DFFCFC2C8C2C8C8C8C2C8C8FFAFCFC2C8C2C8C8
%A87CA7CAFFA8FFA1A1A8A87DA17CA1A8A87CA1A1CAA8FFFFFFA8A77DA17C
%A7A8FD50FFC9C89FC8A0C89FCAAFC99FC8A0C89FC97D7D7CFFA8FFA8A17C
%A8A1A17CA17CA1A8A17CA17CA1A7FFFFFFA17D7CA7A8FD52FFCAC9C2C8C2
%C9FFCFC2C8C8C8C2C9A7A17DA7CAFFFFCA7DA1A7CF7DA17DA77DA8A8A77D
%A17CA1A1CFFFCAA1FD57FFCFC2C8CACFC2C8A0C8C2C8C8A87CA17CFFA8FF
%A1A17CA7A8A17CA17CA17CA8A7A17CA17CA17CA7CAFD5AFFC9CFC2C8C8C8
%C2C8C2C97DA17DA1A8FFFFA77CA1A1FF7DA17DA17DA17DCAA1A17DA17CA8
%FD5DFFCAC99FC8A0C8A0C8A7A17CA17CCFA8CF7CA17CA1A8A17CA17CA17C
%A17CA87DA17CA8FD61FFC9C8C2C8C8A87CA77DA1A8FFA8A17DA77DCFA7A1
%7DA17DA77DA17DCFA8FD64FFC9C89FC97DA17CA17DCFAFA87CA17CA1A8A8
%7CA17CA17CA17CA7A8FD67FFC9A7A17DA17CA7CAFF7DA17DA17CCAA8A17D
%A17DA17DCFFD6AFFCA7CA17CA17CFFA8A17CA17C7D7DFF7CA17CA1A1FD6E
%FFA7A17CA7FFCF7CA77DA17DA7FFA17CA8CFFD70FFA8A17CFFA77D7CA17C
%A17CFFA1A8FD74FFA8CAA77DA17DA7A1A8A8FD78FFA8CAA8FFA8FDFCFFFD
%FCFFFDFCFFFDFCFFFDD5FF82A7FD04FF82A7FD04FF8382A8FD05FFA88257
%825783FFA782FFFFFF8282FFAD5D8257825EFFA8825D5D5782A7FD06FFCF
%5E5E578283FFA88283FFFFFFAE8283FFFFFF8382AEFFFFFF8283FFAE5D5E
%578282AEFD04FF825E575E83FFA78257825D82A8FFFFFF825E575E58FD0D
%FF5E83FD04FF8282FD04FF8233A7FD04FF835E82AEA8ADA7FF8282FFFF83
%5EA7FF825E83AD83ADFFAE33ADA8AE825E82FD05FFA75E83CF835E83FF82
%5EFFFFFFAD5DFD05FF33ADFFFF835EA8FF825EA7AE838239AEFFFF835E83
%CF83AEFFAE398383AD83FFFFFF5D5E83AEA7A7FD0DFF57A7FD04FF5E82FF
%FFFFAE578357FFFFFFA85D82FD06FF8257FFA73983FFFF8357FD05FFA75D
%A8FFFFFF833A83FD04FFAE33AEFFFF825EFFFF33A7FFFF33A7FD05FFA733
%FFFF5D82FFFF8258FD04FF8333AEFF5E83FD05FF835EA8FD05FF5782FD12
%FF8283FD04FF8282FFFFFF8283AE5EA8FFFF835DFD07FF8283CF5E82FFFF
%FF8282FD05FFAE5DFD05FF8282FD04FFA85EAEFFFF8282FFFFAD5DFF8282
%FD07FF8282AD5DFFFFFF8282FD05FF5E83FF5D82FD05FFAE5DFD05FFA75E
%AEFD12FF5782838382A75783FFFFAE5D83FF5783FFFF5D82FD07FF835782
%5DFD04FF8357A7838383FFA85DA8FD04FFAE33CFFFFFFFAE3383838257FF
%FFFFA85E825DA7FD07FFA75E57AEFFFFFF8358FD05FF5E82FFAE335E83FF
%FFFF835E828382A7FF8357FD13FF8257825E825E5E83FFFFAE5DFFFFAD5D
%FFFF8283FD07FF835E5D5EAEFFFFFF835E5E825E83FFCF5DFD05FFA75EAE
%FFFFFFA85E5E835D5EA8FFFFFF835E82FD09FF575ECFFFFFFF8282FD05FF
%8282FFFFCF825E5DFFFFAE578282825EFF8282FD13FF5783FD04FF5783FF
%FF825E5782575EA8FF5782FD07FF8357FF585EFFFFFF8357FD05FFA75DA8
%FD04FF8333FD04FFAE33AEFFFF825DA8FFFFCF33AEFD08FF825E5782FFFF
%FF835EFD05FF5783FD04FFA85D57FF835DA8FD04FF8357FD13FF8283FD04
%FF8282FFFF8282AEA7AE5DA7FFAD5DFD07FF8282FFFF5D83FFFF8282FD05
%FFCF5DFD05FF5D83FD04FFAE5EA8FFFFCF33AEFFFFAE5EA7FD07FFAE5EA7
%CF39AEFFFF8282FD04FFA85EA7FD05FF835EFFAE57FD05FFA85EA7FD12FF
%5783FD04FF5883FFAE33FD04FF8357FFA85E5EFD06FF835EFFFFAD33AEFF
%8357FD05FFA75EAEFFFFFF5E5DA8FD04FFAE33AEFFFF825DA8FFFFCF33AE
%FD07FF825DFFFF8257FFFF835EFFFFFFA85D58FD06FF8257FFA75DA8FD05
%FF5E5DA8FD11FF5E83FD04FF8282FF825EFD04FFA73AA8FFA75E5D838282
%82FF8282FFFFFF825DFF825E82828283FFAE338383825782A8FD05FFA75E
%82A75E5E83FFFFFFAE5E83FD06FFAD33CFFFFFA85E83FF825E83835E5E82
%FFFFFF5D8283825DAEFFAE3382828382AEFFFF5E5E5EAD8282CFFD0CFF83
%AEFD04FF83AEFFA7A7FD05FF83AEFFFFA8A7828282AEFFAE83FFFFFFA883
%A8AE83A7838382FFA883828282A8A8FD06FFCF82838283A8FD05FF83AEFD
%06FF83A7FD04FF83A7FFAE82828283A7FFFFFFA8AE828282AEFFFFA8A783
%838283A8FFFFFF83835E8283FD06FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Line Plugin Group) (Line artwork) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Sketch Plugin Group) (Sketch artwork) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ Touch Calligraphic Brush/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Touch Calligraphic Brush)
(1 0 24 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 2 79 255 79 0 50 Lb
(Guides For Artboard) Ln
0 A
0 J 0 j 1 w 10 M []0 d0 XR
0 1668 m
2224 1668 L
2224 0 L
0 0 L
0 1668 L
(n) *
212 1662 m
2028 1662 L
2028 4 L
212 4 L
212 1662 L
(n) *
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
*u
%AI3_Note:<< /operation /xor /defaultFill false >>0 O
0.002777 0.002319 0.090517 0 k
0 J 0 j 1 w 10 M []0 d1 XR
1103.5 1613.0356 m
1105.8331 1613.0356 1108.1669 1613.0356 1110.5 1613.0356 C
1134.8309 1586.3716 1159.1691 1559.6996 1183.5 1533.0356 C
1183.1667 1533.0356 1182.8333 1533.0356 1182.5 1533.0356 C
1153.5029 1553.3669 1124.4971 1573.7043 1095.5 1594.0356 C
1053.8375 1591.3692 1012.1625 1588.702 970.5 1586.0356 C
970.5 1586.3689 970.5 1586.7023 970.5 1587.0356 C
1014.8289 1595.7014 1059.1711 1604.3698 1103.5 1613.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1120.5 1613.0356 m
1197.159 1600.3702 1273.841 1587.701 1350.5 1575.0356 C
1349.8334 1574.0357 1349.1666 1573.0355 1348.5 1572.0356 C
1313.1702 1541.0387 1277.8298 1510.0325 1242.5 1479.0356 C
1201.8374 1523.6978 1161.1626 1568.3734 1120.5 1613.0356 C
f
*U
*u
0.002777 0.002319 0.090517 0 k
1077.5 1587.0356 m
1079.1665 1586.7023 1080.8335 1586.3689 1082.5 1586.0356 C
1082.5 1585.7023 1082.5 1585.3689 1082.5 1585.0356 C
993.8422 1554.0387 905.1578 1523.0325 816.5 1492.0356 C
818.4998 1494.3687 820.5002 1496.7025 822.5 1499.0356 C
844.4978 1524.0331 866.5022 1549.0381 888.5 1574.0356 C
951.4937 1578.3685 1014.5063 1582.7027 1077.5 1587.0356 C
f
*U
*u
1088.5 1580.0356 m
1089.1666 1579.7023 1089.8334 1579.3689 1090.5 1579.0356 C
1008.8415 1522.3746 927.1585 1465.6966 845.5 1409.0356 C
845.5 1409.3689 845.5 1409.7023 845.5 1410.0356 C
865.1647 1444.3655 884.8353 1478.7057 904.5 1513.0356 C
965.8272 1535.3667 1027.1728 1557.7045 1088.5 1580.0356 C
f
*U
*u
1106.5 1575.0356 m
1133.2191 1565.7228 1220.3223 1502.582 1231.5 1479.0356 C
1231.1667 1479.0356 1230.8333 1479.0356 1230.5 1479.0356 C
1181.7614 1501.9329 1123.8136 1519.9735 1106.5 1575.0356 C
f
*U
*u
1095.5 1573.0356 m
1102.166 1558.0371 1108.834 1543.0341 1115.5 1528.0356 C
1076.1706 1519.7031 1036.8294 1511.3681 997.5 1503.0356 C
997.8333 1504.0355 998.1667 1505.0357 998.5 1506.0356 C
1030.8301 1528.3667 1063.1699 1550.7045 1095.5 1573.0356 C
f
*U
*u
876.5 1572.0356 m
875.4454 1564.8675 826.0073 1513.0711 816.5 1506.0356 C
816.1667 1506.0356 815.8333 1506.0356 815.5 1506.0356 C
817.1665 1524.0338 818.8335 1542.0374 820.5 1560.0356 C
839.1648 1564.0352 857.8352 1568.036 876.5 1572.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1359.5 1572.0356 m
1374.8318 1569.3692 1390.1682 1566.702 1405.5 1564.0356 C
1374.8364 1512.0408 1344.1636 1460.0304 1313.5 1408.0356 C
1313.1667 1408.0356 1312.8333 1408.0356 1312.5 1408.0356 C
1312.5 1408.3689 1312.5 1408.7023 1312.5 1409.0356 C
1328.1651 1463.3635 1343.8349 1517.7077 1359.5 1572.0356 C
f
*U
*u
1348.5 1563.0356 m
1345.8336 1552.7033 1343.1664 1542.3679 1340.5 1532.0356 C
1331.1676 1498.7056 1321.8324 1465.3656 1312.5 1432.0356 C
1291.1688 1444.3677 1269.8312 1456.7035 1248.5 1469.0356 C
1249.4999 1470.3688 1250.5001 1471.7024 1251.5 1473.0356 C
1283.8301 1503.0326 1316.1699 1533.0386 1348.5 1563.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1413.5 1563.0356 m
1449.8297 1558.7027 1486.1703 1554.3685 1522.5 1550.0356 C
1502.502 1504.7068 1482.498 1459.3644 1462.5 1414.0356 C
1462.1667 1414.0356 1461.8333 1414.0356 1461.5 1414.0356 C
1445.5016 1463.6973 1429.4984 1513.3739 1413.5 1563.0356 C
f
*U
*u
0.002777 0.002319 0.090517 0 k
808.5 1562.0356 m
809.8332 1562.0356 811.1668 1562.0356 812.5 1562.0356 C
810.8335 1541.7043 809.1665 1521.3669 807.5 1501.0356 C
807.1667 1501.0356 806.8333 1501.0356 806.5 1501.0356 C
788.258 1506.2958 693.3722 1523.3258 686.5 1531.0356 C
727.1626 1541.3679 767.8374 1551.7033 808.5 1562.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1406.5 1555.0356 m
1422.8317 1507.3737 1439.1683 1459.6975 1455.5 1412.0356 C
1412.5043 1413.3688 1369.4957 1414.7024 1326.5 1416.0356 C
1326.5 1416.3689 1326.5 1416.7023 1326.5 1417.0356 C
1353.164 1463.031 1379.836 1509.0402 1406.5 1555.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1531.5 1549.0356 m
1543.1655 1533.0372 1554.8345 1517.034 1566.5 1501.0356 C
1556.6162 1488.4253 1488.0252 1428.3034 1474.5 1423.0356 C
1493.4981 1465.0314 1512.5019 1507.0398 1531.5 1549.0356 C
f
*U
*u
0.002777 0.002319 0.090517 0 k
668.5 1527.0356 m
712.8289 1515.7034 757.1711 1504.3678 801.5 1493.0356 C
754.1714 1448.3734 706.8286 1403.6978 659.5 1359.0356 C
662.4997 1415.03 665.5003 1471.0412 668.5 1527.0356 C
f
*U
*u
1125.5 1521.0356 m
1163.4962 1503.0374 1201.5038 1485.0338 1239.5 1467.0356 C
1239.5 1466.369 1239.5 1465.7022 1239.5 1465.0356 C
1162.5077 1474.7013 1085.4923 1484.3699 1008.5 1494.0356 C
1047.4961 1503.0347 1086.5039 1512.0365 1125.5 1521.0356 C
f
*U
*u
892.5 1511.0356 m
862.8363 1457.7076 833.1637 1404.3636 803.5 1351.0356 C
802.8334 1351.0356 802.1666 1351.0356 801.5 1351.0356 C
804.1664 1394.6979 806.8336 1438.3733 809.5 1482.0356 C
837.1639 1491.7013 864.8361 1501.3699 892.5 1511.0356 C
f
*U
*u
985.5 1497.0356 m
995.4509 1492.464 1022.255 1441.3091 1028.5 1429.0356 C
971.839 1422.0363 915.161 1415.0349 858.5 1408.0356 C
858.8333 1408.7022 859.1667 1409.369 859.5 1410.0356 C
901.4958 1439.0327 943.5042 1468.0385 985.5 1497.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1564.5 1493.0356 m
1567.8448 1487.9689 1567.5056 1470.687 1565.5 1464.0356 C
1547.8351 1457.7029 1530.1649 1451.3683 1512.5 1445.0356 C
1514.1665 1447.3687 1515.8335 1449.7025 1517.5 1452.0356 C
1533.1651 1465.7009 1548.8349 1479.3703 1564.5 1493.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1012.5 1484.0356 m
1089.159 1475.0365 1165.841 1466.0347 1242.5 1457.0356 C
1204.1705 1418.3728 1165.8295 1379.6984 1127.5 1341.0356 C
1089.1705 1388.6975 1050.8295 1436.3737 1012.5 1484.0356 C
f
*U
*u
0.002777 0.002319 0.090517 0 k
798.5 1477.0356 m
802.5959 1472.2991 799.3162 1452.1341 798.5 1443.0356 C
795.8336 1411.0388 793.1664 1379.0324 790.5 1347.0356 C
790.1667 1347.0356 789.8333 1347.0356 789.5 1347.0356 C
784.5005 1373.033 779.4995 1399.0382 774.5 1425.0356 C
782.4992 1442.3672 790.5008 1459.704 798.5 1477.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
782.5 1463.0356 m
745.1704 1378.0441 707.8296 1293.0271 670.5 1208.0356 C
669.8334 1208.0356 669.1666 1208.0356 668.5 1208.0356 C
665.5003 1253.0311 662.4997 1298.0401 659.5 1343.0356 C
700.4959 1383.0316 741.5041 1423.0396 782.5 1463.0356 C
f
*U
*u
0.002777 0.002319 0.090517 0 k
1019.5 1462.0356 m
1031.8767 1455.3578 1041.0913 1436.1527 1049.5 1425.0356 C
1071.4978 1397.3717 1093.5022 1369.6995 1115.5 1342.0356 C
1067.5048 1366.0332 1019.4952 1390.038 971.5 1414.0356 C
994.4977 1417.3686 1017.5023 1420.7026 1040.5 1424.0356 C
1040.8333 1424.7022 1041.1667 1425.369 1041.5 1426.0356 C
1034.1674 1438.0344 1026.8326 1450.0368 1019.5 1462.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1567.5 1458.0356 m
1573.9404 1450.9489 1568.8316 1419.3606 1568.5 1407.0356 C
1568.1667 1407.0356 1567.8333 1407.0356 1567.5 1407.0356 C
1545.5022 1416.0347 1523.4978 1425.0365 1501.5 1434.0356 C
1501.5 1434.3689 1501.5 1434.7023 1501.5 1435.0356 C
1523.4978 1442.7015 1545.5022 1450.3697 1567.5 1458.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1251.5 1457.0356 m
1271.1647 1446.37 1290.8353 1435.7012 1310.5 1425.0356 C
1302.8192 1371.9311 1264.0816 1349.1837 1245.5 1308.0356 C
1245.1667 1308.0356 1244.8333 1308.0356 1244.5 1308.0356 C
1246.8331 1357.6973 1249.1669 1407.3739 1251.5 1457.0356 C
f
*U
*u
1241.5 1443.0356 m
1245.9329 1437.9268 1242.6654 1414.5197 1241.5 1405.0356 C
1239.1669 1371.039 1236.8331 1337.0322 1234.5 1303.0356 C
1234.1667 1303.0356 1233.8333 1303.0356 1233.5 1303.0356 C
1200.5033 1313.0346 1167.4967 1323.0366 1134.5 1333.0356 C
1170.1631 1369.6986 1205.8369 1406.3726 1241.5 1443.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1500.5 1427.0356 m
1519.4981 1419.3697 1538.5019 1411.7015 1557.5 1404.0356 C
1557.5 1403.7023 1557.5 1403.3689 1557.5 1403.0356 C
1508.8382 1390.7035 1460.1618 1378.3677 1411.5 1366.0356 C
1411.8333 1367.0355 1412.1667 1368.0357 1412.5 1369.0356 C
1441.8304 1388.367 1471.1696 1407.7042 1500.5 1427.0356 C
f
*U
*u
0.002777 0.002319 0.090517 0 k
959.5 1413.0356 m
991.8301 1396.3706 1024.1699 1379.7006 1056.5 1363.0356 C
1056.5 1362.369 1056.5 1361.7022 1056.5 1361.0356 C
1056.1667 1361.0356 1055.8333 1361.0356 1055.5 1361.0356 C
1029.1693 1365.7018 1002.8307 1370.3694 976.5 1375.0356 C
955.1688 1363.3701 933.8312 1351.7011 912.5 1340.0356 C
913.1666 1341.0355 913.8334 1342.0357 914.5 1343.0356 C
929.4985 1366.3666 944.5015 1389.7046 959.5 1413.0356 C
f
*U
*u
939.5 1412.0356 m
942.4997 1412.0356 945.5003 1412.0356 948.5 1412.0356 C
930.5018 1383.7051 912.4982 1355.3661 894.5 1327.0356 C
894.5 1327.7022 894.5 1328.369 894.5 1329.0356 C
879.1682 1352.6999 863.8318 1376.3713 848.5 1400.0356 C
849.1666 1400.3689 849.8334 1400.7023 850.5 1401.0356 C
880.1637 1404.7019 909.8363 1408.3693 939.5 1412.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1323.5 1411.0356 m
1365.8291 1408.7025 1408.1709 1406.3687 1450.5 1404.0356 C
1449.8334 1404.0356 1449.1666 1404.0356 1448.5 1404.0356 C
1382.1733 1370.039 1315.8267 1336.0322 1249.5 1302.0356 C
1249.5 1302.3689 1249.5 1302.7023 1249.5 1303.0356 C
1274.1642 1339.032 1298.8358 1375.0392 1323.5 1411.0356 C
f
*U
*u
768.5 1407.0356 m
777.2328 1398.7051 779.8134 1348.9603 784.5 1334.0356 C
761.5023 1317.3706 738.4977 1300.7006 715.5 1284.0356 C
715.5 1284.3689 715.5 1284.7023 715.5 1285.0356 C
733.1649 1325.6982 750.8351 1366.373 768.5 1407.0356 C
f
*U
*u
0.002777 0.002319 0.090517 0 k
839.5 1403.0356 m
853.4986 1380.3712 867.5014 1357.7 881.5 1335.0356 C
881.1667 1335.0356 880.8333 1335.0356 880.5 1335.0356 C
854.8359 1336.0355 829.1641 1337.0357 803.5 1338.0356 C
803.5 1338.3689 803.5 1338.7023 803.5 1339.0356 C
815.4988 1360.3668 827.5012 1381.7044 839.5 1403.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1565.5 1400.0356 m
1566.8332 1400.0356 1568.1668 1400.0356 1569.5 1400.0356 C
1567.1669 1363.7059 1564.8331 1327.3653 1562.5 1291.0356 C
1517.5045 1315.3665 1472.4955 1339.7047 1427.5 1364.0356 C
1473.4954 1376.0344 1519.5046 1388.0368 1565.5 1400.0356 C
f
*U
*u
1392.5 1368.0356 m
1393.1666 1367.7023 1393.8334 1367.3689 1394.5 1367.0356 C
1389.5005 1362.7027 1384.4995 1358.3685 1379.5 1354.0356 C
1379.5 1353.7023 1379.5 1353.3689 1379.5 1353.0356 C
1382.833 1353.7022 1386.167 1354.369 1389.5 1355.0356 C
1389.5 1354.7023 1389.5 1354.3689 1389.5 1354.0356 C
1388.8334 1353.7023 1388.1666 1353.3689 1387.5 1353.0356 C
1365.8355 1345.703 1344.1645 1338.3682 1322.5 1331.0356 C
1322.5 1331.3689 1322.5 1331.7023 1322.5 1332.0356 C
1345.831 1344.0344 1369.169 1356.0368 1392.5 1368.0356 C
f
*U
*u
977.5 1366.0356 m
1009.4968 1326.0396 1041.5032 1286.0316 1073.5 1246.0356 C
1073.1667 1245.369 1072.8333 1244.7022 1072.5 1244.0356 C
1009.5063 1222.3711 946.4937 1200.7001 883.5 1179.0356 C
912.4971 1208.0327 941.5029 1237.0385 970.5 1266.0356 C
970.1667 1266.7022 969.8333 1267.369 969.5 1268.0356 C
937.5032 1273.0351 905.4968 1278.0361 873.5 1283.0356 C
873.8333 1284.0355 874.1667 1285.0357 874.5 1286.0356 C
908.8299 1312.6996 943.1701 1339.3716 977.5 1366.0356 C
f
*U
*u
0.002777 0.002319 0.090517 0 k
989.5 1365.0356 m
1036.8199 1351.5462 1095.4119 1355.2185 1125.5 1325.0356 C
1125.5 1324.7023 1125.5 1324.3689 1125.5 1324.0356 C
1103.259 1322.3697 1051.7106 1299.5108 1035.5 1306.0356 C
1020.1682 1325.7003 1004.8318 1345.3709 989.5 1365.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1420.5 1356.0356 m
1432.8321 1349.3696 1445.1679 1342.7016 1457.5 1336.0356 C
1429.1695 1303.0389 1400.8305 1270.0323 1372.5 1237.0356 C
1388.4984 1276.6983 1404.5016 1316.3729 1420.5 1356.0356 C
f
*U
*u
1408.5 1352.0356 m
1409.1666 1352.0356 1409.8334 1352.0356 1410.5 1352.0356 C
1395.1682 1313.7061 1379.8318 1275.3651 1364.5 1237.0356 C
1364.1667 1237.7022 1363.8333 1238.369 1363.5 1239.0356 C
1345.1685 1265.6996 1326.8315 1292.3716 1308.5 1319.0356 C
1341.83 1330.0345 1375.17 1341.0367 1408.5 1352.0356 C
f
*U
*u
922.5 1338.0356 m
923.1666 1337.7023 923.8334 1337.3689 924.5 1337.0356 C
903.1688 1320.0373 881.8312 1303.0339 860.5 1286.0356 C
860.5 1286.7022 860.5 1287.369 860.5 1288.0356 C
858.5002 1292.0352 856.4998 1296.036 854.5 1300.0356 C
877.1644 1312.701 899.8356 1325.3702 922.5 1338.0356 C
f
*U
*u
0.002777 0.002319 0.090517 0 k
794.5 1330.0356 m
824.8303 1329.0357 855.1697 1328.0355 885.5 1327.0356 C
884.8334 1326.7023 884.1666 1326.3689 883.5 1326.0356 C
875.2723 1317.9126 855.1961 1306.0972 842.5 1304.0356 C
844.8331 1291.7035 847.1669 1279.3677 849.5 1267.0356 C
849.1667 1267.0356 848.8333 1267.0356 848.5 1267.0356 C
830.5018 1288.0335 812.4982 1309.0377 794.5 1330.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1461.5 1328.0356 m
1471.8663 1320.7501 1514.5595 1287.5933 1517.5 1277.0356 C
1512.8338 1258.0375 1508.1662 1239.0337 1503.5 1220.0356 C
1503.1667 1220.7022 1502.8333 1221.369 1502.5 1222.0356 C
1488.8347 1257.3654 1475.1653 1292.7058 1461.5 1328.0356 C
f
*U
*u
1473.5 1328.0356 m
1501.1639 1313.7037 1528.8361 1299.3675 1556.5 1285.0356 C
1541.1682 1263.3711 1525.8318 1241.7001 1510.5 1220.0356 C
1515.4995 1240.3669 1520.5005 1260.7043 1525.5 1281.0356 C
1508.1684 1296.7007 1490.8316 1312.3705 1473.5 1328.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
787.5 1326.0356 m
806.4981 1304.7044 825.5019 1283.3668 844.5 1262.0356 C
844.5 1261.7023 844.5 1261.3689 844.5 1261.0356 C
800.5044 1263.3687 756.4956 1265.7025 712.5 1268.0356 C
712.8333 1269.0355 713.1667 1270.0357 713.5 1271.0356 C
738.1642 1289.3671 762.8358 1307.7041 787.5 1326.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1453.5 1323.0356 m
1467.4986 1289.039 1481.5014 1255.0322 1495.5 1221.0356 C
1472.8356 1231.7012 1450.1644 1242.37 1427.5 1253.0356 C
1415.8345 1236.0373 1404.1655 1219.0339 1392.5 1202.0356 C
1392.1667 1202.0356 1391.8333 1202.0356 1391.5 1202.0356 C
1391.5 1202.3689 1391.5 1202.7023 1391.5 1203.0356 C
1412.1646 1243.0316 1432.8354 1283.0396 1453.5 1323.0356 C
f
*U
*u
0.002777 0.002319 0.090517 0 k
1145.5 1322.0356 m
1144.5023 1313.1922 1092.9199 1258.2943 1082.5 1249.0356 C
1069.168 1265.034 1055.832 1281.0372 1042.5 1297.0356 C
1042.5 1297.3689 1042.5 1297.7023 1042.5 1298.0356 C
1042.8333 1298.3689 1043.1667 1298.7023 1043.5 1299.0356 C
1077.4966 1306.7015 1111.5034 1314.3697 1145.5 1322.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1153.5 1317.0356 m
1165.8917 1310.9688 1209.3889 1257.4847 1219.5 1244.0356 C
1177.1709 1245.3688 1134.8291 1246.7024 1092.5 1248.0356 C
1093.4999 1249.0355 1094.5001 1250.0357 1095.5 1251.0356 C
1114.8314 1273.0334 1134.1686 1295.0378 1153.5 1317.0356 C
f
*U
*u
1167.5 1316.0356 m
1192.4975 1307.3698 1217.5025 1298.7014 1242.5 1290.0356 C
1259.4983 1298.3681 1276.5017 1306.7031 1293.5 1315.0356 C
1272.1688 1292.0379 1250.8312 1269.0333 1229.5 1246.0356 C
1226.8336 1248.3687 1224.1664 1250.7025 1221.5 1253.0356 C
1203.5018 1274.0335 1185.4982 1295.0377 1167.5 1316.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1301.5 1314.0356 m
1320.1648 1287.7049 1338.8352 1261.3663 1357.5 1235.0356 C
1313.1711 1232.3692 1268.8289 1229.702 1224.5 1227.0356 C
1250.1641 1256.0327 1275.8359 1285.0385 1301.5 1314.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
453.5 1297.0356 m
455.4998 1291.0362 457.5002 1285.035 459.5 1279.0356 C
445.5014 1276.7025 431.4986 1274.3687 417.5 1272.0356 C
417.8333 1273.0355 418.1667 1274.0357 418.5 1275.0356 C
430.1655 1282.3682 441.8345 1289.703 453.5 1297.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1427.5 1291.0356 m
1428.1666 1291.0356 1428.8334 1291.0356 1429.5 1291.0356 C
1412.5017 1257.3723 1395.4983 1223.6989 1378.5 1190.0356 C
1377.8334 1190.0356 1377.1666 1190.0356 1376.5 1190.0356 C
1374.8335 1201.3678 1373.1665 1212.7034 1371.5 1224.0356 C
1390.1648 1246.3667 1408.8352 1268.7045 1427.5 1291.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1823.5 1291.0356 m
1823.5 1266.0381 1823.5 1241.0331 1823.5 1216.0356 C
1778.8378 1194.0378 1734.1622 1172.0334 1689.5 1150.0356 C
1692.1664 1153.0353 1694.8336 1156.0359 1697.5 1159.0356 C
1739.4958 1203.0312 1781.5042 1247.04 1823.5 1291.0356 C
f
*U
*u
1745.5 1288.0356 m
1764.1648 1285.0359 1782.8352 1282.0353 1801.5 1279.0356 C
1780.5021 1258.0377 1759.4979 1237.0335 1738.5 1216.0356 C
1740.8331 1240.0332 1743.1669 1264.038 1745.5 1288.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1563.5 1279.0356 m
1563.1667 1257.3711 1562.8333 1235.7001 1562.5 1214.0356 C
1573.6534 1211.1853 1599.1823 1194.4404 1604.5 1185.0356 C
1576.1695 1195.0346 1547.8305 1205.0366 1519.5 1215.0356 C
1520.1666 1215.7022 1520.8334 1216.369 1521.5 1217.0356 C
1535.4986 1237.7002 1549.5014 1258.371 1563.5 1279.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
856.5 1278.0356 m
886.497 1273.3694 916.503 1268.7018 946.5 1264.0356 C
918.8361 1236.0384 891.1639 1208.0328 863.5 1180.0356 C
861.1669 1212.699 858.8331 1245.3722 856.5 1278.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
498.5 1273.0356 m
506.4724 1272.0446 507.6659 1267.8832 512.5 1264.0356 C
515.4997 1260.3693 518.5003 1256.7019 521.5 1253.0356 C
521.5 1252.7023 521.5 1252.3689 521.5 1252.0356 C
490.1698 1256.3685 458.8302 1260.7027 427.5 1265.0356 C
451.1643 1267.702 474.8357 1270.3692 498.5 1273.0356 C
f
*U
*u
1729.5 1267.0356 m
1735.7965 1260.1235 1730.0111 1228.1887 1729.5 1217.0356 C
1718.8344 1227.3679 1708.1656 1237.7033 1697.5 1248.0356 C
1697.8333 1248.7022 1698.1667 1249.369 1698.5 1250.0356 C
1708.8323 1255.7017 1719.1677 1261.3695 1729.5 1267.0356 C
f
*U
*u
382.5 1264.0356 m
423.4959 1255.3698 464.5041 1246.7014 505.5 1238.0356 C
503.1669 1235.3692 500.8331 1232.702 498.5 1230.0356 C
483.5015 1215.3704 468.4985 1200.7008 453.5 1186.0356 C
451.5002 1187.7021 449.4998 1189.3691 447.5 1191.0356 C
425.8355 1215.3665 404.1645 1239.7047 382.5 1264.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
719.5 1260.0356 m
759.1627 1257.0359 798.8373 1254.0353 838.5 1251.0356 C
837.8334 1250.7023 837.1666 1250.3689 836.5 1250.0356 C
820.5016 1245.3694 804.4984 1240.7018 788.5 1236.0356 C
781.8286 1235.1679 722.1498 1256.6453 719.5 1260.0356 C
f
*U
*u
701.5 1256.0356 m
725.1643 1248.0364 748.8357 1240.0348 772.5 1232.0356 C
772.5 1231.7023 772.5 1231.3689 772.5 1231.0356 C
742.1697 1223.3697 711.8303 1215.7015 681.5 1208.0356 C
688.166 1224.034 694.834 1240.0372 701.5 1256.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1834.5 1254.0356 m
1846.6303 1248.2322 1874.0238 1217.3474 1882.5 1206.0356 C
1882.5 1205.7023 1882.5 1205.3689 1882.5 1205.0356 C
1865.5017 1201.3693 1848.4983 1197.7019 1831.5 1194.0356 C
1831.5 1198.0352 1831.5 1202.036 1831.5 1206.0356 C
1832.4999 1222.034 1833.5001 1238.0372 1834.5 1254.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
553.5 1250.0356 m
588.1632 1235.3704 622.8368 1220.7008 657.5 1206.0356 C
657.5 1205.369 657.5 1204.7022 657.5 1204.0356 C
636.1688 1199.0361 614.8312 1194.0351 593.5 1189.0356 C
580.168 1209.3669 566.832 1229.7043 553.5 1250.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
535.5 1249.0356 m
539.6414 1242.4304 538.7178 1225.9668 538.5 1216.0356 C
519.1686 1210.7028 499.8314 1205.3684 480.5 1200.0356 C
480.5 1200.3689 480.5 1200.7023 480.5 1201.0356 C
481.1666 1201.3689 481.8334 1201.7023 482.5 1202.0356 C
500.1649 1217.7007 517.8351 1233.3705 535.5 1249.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
847.5 1242.0356 m
853.8202 1235.6927 849.8808 1217.9644 851.5 1207.0356 c
854.4544 1187.0951 863.5844 1116.2335 856.5 1101.0356 C
776.1747 1128.3662 695.8253 1155.705 615.5 1183.0356 C
692.8256 1202.7003 770.1744 1222.3709 847.5 1242.0356 C
f
*U
*u
1435.5 1242.0356 m
1456.8312 1231.7033 1478.1688 1221.3679 1499.5 1211.0356 C
1498.8334 1210.369 1498.1666 1209.7022 1497.5 1209.0356 C
1471.8359 1179.7052 1446.1641 1150.366 1420.5 1121.0356 C
1425.4995 1161.3649 1430.5005 1201.7063 1435.5 1242.0356 C
f
*U
*u
546.5 1241.0356 m
557.7748 1234.4506 574.397 1208.4284 579.5 1196.0356 C
579.1667 1196.0356 578.8333 1196.0356 578.5 1196.0356 C
568.8343 1203.7015 559.1657 1211.3697 549.5 1219.0356 C
548.5001 1226.3682 547.4999 1233.703 546.5 1241.0356 C
f
*U
*u
1089.5 1241.0356 m
1133.4956 1239.7024 1177.5044 1238.3688 1221.5 1237.0356 C
1220.5001 1236.0357 1219.4999 1235.0355 1218.5 1234.0356 C
1201.835 1213.0377 1185.165 1192.0335 1168.5 1171.0356 C
1142.1693 1194.3666 1115.8307 1217.7046 1089.5 1241.0356 C
f
*U
*u
1426.5 1238.0356 m
1431.7866 1224.2145 1413.0003 1129.4635 1410.5 1107.0356 C
1383.836 1104.3692 1357.164 1101.702 1330.5 1099.0356 C
1331.1666 1100.0355 1331.8334 1101.0357 1332.5 1102.0356 C
1363.8302 1147.3644 1395.1698 1192.7068 1426.5 1238.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1682.5 1238.0356 m
1687.1662 1238.0356 1691.8338 1238.0356 1696.5 1238.0356 C
1704.8325 1229.7031 1713.1675 1221.3681 1721.5 1213.0356 C
1721.5 1212.7023 1721.5 1212.3689 1721.5 1212.0356 C
1690.1698 1219.3682 1658.8302 1226.703 1627.5 1234.0356 C
1627.5 1234.3689 1627.5 1234.7023 1627.5 1235.0356 C
1645.8315 1236.0355 1664.1685 1237.0357 1682.5 1238.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1073.5 1237.0356 m
1086.6223 1234.7366 1149.6307 1178.7413 1158.5 1167.0356 C
1071.1754 1169.702 983.8246 1172.3692 896.5 1175.0356 C
897.1666 1175.0356 897.8334 1175.0356 898.5 1175.0356 C
956.8275 1195.7002 1015.1725 1216.371 1073.5 1237.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
391.5 1234.0356 m
391.8333 1225.3698 392.1667 1216.7014 392.5 1208.0356 C
386.1673 1216.3681 379.8327 1224.7031 373.5 1233.0356 C
379.4994 1233.3689 385.5006 1233.7023 391.5 1234.0356 C
f
*U
*u
1607.5 1230.0356 m
1639.4968 1221.7031 1671.5032 1213.3681 1703.5 1205.0356 C
1702.8334 1205.0356 1702.1666 1205.0356 1701.5 1205.0356 C
1675.8359 1197.3697 1650.1641 1189.7015 1624.5 1182.0356 C
1610.1681 1196.0342 1595.8319 1210.037 1581.5 1224.0356 C
1582.1666 1224.0356 1582.8334 1224.0356 1583.5 1224.0356 C
1591.4992 1226.0354 1599.5008 1228.0358 1607.5 1230.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1342.5 1227.0356 m
1349.166 1227.0356 1355.834 1227.0356 1362.5 1227.0356 C
1366.1663 1210.0373 1369.8337 1193.0339 1373.5 1176.0356 C
1326.5047 1190.7008 1279.4953 1205.3704 1232.5 1220.0356 C
1269.163 1222.3687 1305.837 1224.7025 1342.5 1227.0356 C
f
*U
*u
1215.5 1217.0356 m
1225.4838 1212.2063 1314.2069 1117.968 1319.5 1107.0356 C
1319.1667 1107.0356 1318.8333 1107.0356 1318.5 1107.0356 C
1294.1691 1118.3678 1269.8309 1129.7034 1245.5 1141.0356 C
1222.6526 1152.0069 1207.6379 1166.0072 1173.5 1166.0356 C
1173.8333 1167.0355 1174.1667 1168.0357 1174.5 1169.0356 C
1188.1653 1185.034 1201.8347 1201.0372 1215.5 1217.0356 C
f
*U
*u
1512.5 1212.0356 m
1520.2299 1208.6266 1536.2123 1204.0534 1540.5 1197.0356 C
1546.1661 1175.0378 1551.8339 1153.0334 1557.5 1131.0356 C
1511.1713 1122.7031 1464.8287 1114.3681 1418.5 1106.0356 C
1419.4999 1107.0355 1420.5001 1108.0357 1421.5 1109.0356 C
1451.8303 1143.3655 1482.1697 1177.7057 1512.5 1212.0356 C
f
*U
*u
1234.5 1210.0356 m
1279.1622 1196.037 1323.8378 1182.0342 1368.5 1168.0356 C
1367.8334 1167.369 1367.1666 1166.7022 1366.5 1166.0356 C
1353.5013 1147.7041 1340.4987 1129.3671 1327.5 1111.0356 C
1296.5031 1144.0323 1265.4969 1177.0389 1234.5 1210.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
417.5 1207.0356 m
427.499 1197.0366 437.501 1187.0346 447.5 1177.0356 C
447.5 1176.7023 447.5 1176.3689 447.5 1176.0356 C
442.5005 1177.7021 437.4995 1179.3691 432.5 1181.0356 C
427.5005 1189.7014 422.4995 1198.3698 417.5 1207.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1721.5 1204.0356 m
1722.1666 1204.0356 1722.8334 1204.0356 1723.5 1204.0356 C
1718.2917 1195.6602 1680.1781 1154.2928 1676.5 1156.0356 C
1669.1674 1161.0351 1661.8326 1166.0361 1654.5 1171.0356 C
1676.8311 1182.0345 1699.1689 1193.0367 1721.5 1204.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
549.5 1202.0356 m
550.4999 1202.0356 551.5001 1202.0356 552.5 1202.0356 C
559.166 1189.0369 565.834 1176.0343 572.5 1163.0356 C
542.503 1170.7015 512.497 1178.3697 482.5 1186.0356 C
504.8311 1191.3684 527.1689 1196.7028 549.5 1202.0356 C
f
*U
*u
566.5 1194.0356 m
602.1631 1173.7043 637.8369 1153.3669 673.5 1133.0356 C
673.5 1132.7023 673.5 1132.3689 673.5 1132.0356 C
651.1689 1128.036 628.8311 1124.0352 606.5 1120.0356 C
593.168 1144.6998 579.832 1169.3714 566.5 1194.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1550.5 1193.0356 m
1583.4967 1183.3699 1616.5033 1173.7013 1649.5 1164.0356 C
1649.5 1163.7023 1649.5 1163.3689 1649.5 1163.0356 C
1620.8362 1156.3696 1592.1638 1149.7016 1563.5 1143.0356 C
1559.1671 1159.7006 1554.8329 1176.3706 1550.5 1193.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
503.5 1168.0356 m
526.831 1161.3696 550.169 1154.7016 573.5 1148.0356 C
572.8334 1147.0357 572.1666 1146.0355 571.5 1145.0356 C
569.5002 1143.7024 567.4998 1142.3688 565.5 1141.0356 C
553.1662 1145.6769 509.9585 1159.5816 503.5 1168.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
878.5 1168.0356 m
934.8277 1165.3692 991.1723 1162.702 1047.5 1160.0356 C
1025.5022 1138.0378 1003.4978 1116.0334 981.5 1094.0356 C
947.1701 1118.6998 912.8299 1143.3714 878.5 1168.0356 C
f
*U
*u
873.5 1096.0356 m
871.1669 1118.3667 868.8331 1140.7045 866.5 1163.0356 C
899.83 1140.0379 933.17 1117.0333 966.5 1094.0356 C
966.5 1093.7023 966.5 1093.3689 966.5 1093.0356 C
935.5031 1094.0355 904.4969 1095.0357 873.5 1096.0356 C
f
*U
*u
1063.5 1159.0356 m
1106.1624 1158.7023 1148.8376 1158.3689 1191.5 1158.0356 C
1232.1626 1138.0376 1272.8374 1118.0336 1313.5 1098.0356 C
1313.5 1097.7023 1313.5 1097.3689 1313.5 1097.0356 C
1206.1774 1094.3692 1098.8226 1091.702 991.5 1089.0356 C
1005.4986 1103.0342 1019.5014 1117.037 1033.5 1131.0356 C
1039.9857 1142.0977 1052.0298 1152.771 1063.5 1159.0356 C
f
*U
*u
653.5 1158.0356 m
692.1628 1144.037 730.8372 1130.0342 769.5 1116.0356 C
782.3002 1111.3726 808.6854 1108.0715 816.5 1098.0356 C
786.8363 1102.0352 757.1637 1106.036 727.5 1110.0356 C
702.8358 1126.034 678.1642 1142.0372 653.5 1158.0356 C
f
*U
*u
1665.5 1131.0356 m
1651.7825 1130.8005 1574.9036 1130.2374 1569.5 1135.0356 C
1601.1635 1142.0349 1632.8365 1149.0363 1664.5 1156.0356 C
1664.8333 1147.7031 1665.1667 1139.3681 1665.5 1131.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
666.5 1096.0356 m
674.4992 1080.0372 682.5008 1064.034 690.5 1048.0356 C
705.8318 1016.7054 721.1682 985.3658 736.5 954.0356 C
712.8357 959.3684 689.1643 964.7028 665.5 970.0356 C
665.8333 1012.0314 666.1667 1054.0398 666.5 1096.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1560.5 1094.0356 m
1562.6731 1091.5972 1565.8983 993.9025 1563.5 988.0356 C
1562.8334 988.3689 1562.1666 988.7023 1561.5 989.0356 C
1551.8343 1004.7007 1542.1657 1020.3705 1532.5 1036.0356 C
1541.8324 1055.367 1551.1676 1074.7042 1560.5 1094.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
705.5 1029.0356 m
721.4425 1017.2621 785.1316 960.3166 792.5 945.0356 C
767.1692 932.0369 741.8308 919.0343 716.5 906.0356 C
724.3814 920.9114 739.97 935.6283 743.5 953.0356 C
730.8346 978.3664 718.1654 1003.7048 705.5 1029.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1527.5 1029.0356 m
1539.8321 1009.3709 1552.1679 989.7003 1564.5 970.0356 C
1529.5035 951.7041 1494.4965 933.3671 1459.5 915.0356 C
1459.5 915.3689 1459.5 915.7023 1459.5 916.0356 C
1482.1644 953.6985 1504.8356 991.3727 1527.5 1029.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1134.5 1018.0356 m
1138.1755 1013.4909 1134.1106 993.3958 1132.5 985.0356 C
1127.1672 949.0392 1121.8328 913.032 1116.5 877.0356 C
1104.5012 920.6979 1092.4988 964.3733 1080.5 1008.0356 C
1081.1666 1008.0356 1081.8334 1008.0356 1082.5 1008.0356 C
1099.8316 1011.3686 1117.1684 1014.7026 1134.5 1018.0356 C
f
*U
*u
1144.5 1007.0356 m
1156.8321 990.0373 1169.1679 973.0339 1181.5 956.0356 C
1168.5013 924.0388 1155.4987 892.0324 1142.5 860.0356 C
1142.1667 860.0356 1141.8333 860.0356 1141.5 860.0356 C
1142.4999 909.0307 1143.5001 958.0405 1144.5 1007.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1493.5 994.0356 m
1494.1666 994.0356 1494.8334 994.0356 1495.5 994.0356 C
1480.1682 967.3716 1464.8318 940.6996 1449.5 914.0356 C
1448.8334 914.3689 1448.1666 914.7023 1447.5 915.0356 C
1445.1669 930.0341 1442.8331 945.0371 1440.5 960.0356 C
1458.1649 971.3678 1475.8351 982.7034 1493.5 994.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1075.5 993.0356 m
1070.5005 939.041 1065.4995 885.0302 1060.5 831.0356 C
1060.1667 831.0356 1059.8333 831.0356 1059.5 831.0356 C
1055.5004 874.6979 1051.4996 918.3733 1047.5 962.0356 C
1056.8324 972.3679 1066.1676 982.7033 1075.5 993.0356 C
f
*U
*u
1083.5 964.0356 m
1088.622 955.0442 1110.84 869.9216 1108.5 866.0356 C
1094.8347 844.0378 1081.1653 822.0334 1067.5 800.0356 C
1066.8334 800.0356 1066.1666 800.0356 1065.5 800.0356 C
1071.4994 854.6968 1077.5006 909.3744 1083.5 964.0356 C
f
*U
*u
667.5 961.0356 m
676.1658 959.0358 684.8342 957.0354 693.5 955.0356 C
700.4993 923.3721 707.5007 891.6991 714.5 860.0356 C
714.1667 860.0356 713.8333 860.0356 713.5 860.0356 C
713.1667 860.0356 712.8333 860.0356 712.5 860.0356 C
697.5015 893.6989 682.4985 927.3723 667.5 961.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1563.5 961.0356 m
1567.9676 956.3437 1565.703 906.4065 1565.5 895.0356 C
1565.1667 895.0356 1564.8333 895.0356 1564.5 895.0356 C
1538.8359 903.0348 1513.1641 911.0364 1487.5 919.0356 C
1487.5 919.3689 1487.5 919.7023 1487.5 920.0356 C
1512.8308 933.7009 1538.1692 947.3703 1563.5 961.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
789.5 960.0356 m
829.1627 954.0362 868.8373 948.035 908.5 942.0356 C
924.1651 901.373 939.8349 860.6982 955.5 820.0356 C
900.1722 866.6976 844.8278 913.3736 789.5 960.0356 C
f
*U
*u
1038.5 956.0356 m
1044.8227 949.0822 1041.7268 930.1499 1043.5 919.0356 c
1046.0446 903.0866 1056.7762 829.3878 1052.5 818.0356 C
1052.5 818.7022 1052.5 819.369 1052.5 820.0356 C
1044.1156 830.9868 994.4301 925.7744 994.5 934.0356 C
1009.1652 941.3682 1023.8348 948.703 1038.5 956.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1421.5 956.0356 m
1422.8332 956.0356 1424.1668 956.0356 1425.5 956.0356 C
1425.5 955.7023 1425.5 955.3689 1425.5 955.0356 C
1425.5 954.7023 1425.5 954.3689 1425.5 954.0356 C
1395.3588 943.7568 1351.2512 902.9315 1324.5 899.0356 C
1303.5021 909.0346 1282.4979 919.0366 1261.5 929.0356 C
1314.828 938.0347 1368.172 947.0365 1421.5 956.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
702.5 955.0356 m
713.1656 952.3692 723.8344 949.702 734.5 947.0356 C
726.8341 934.3702 719.1659 921.701 711.5 909.0356 C
711.1667 909.0356 710.8333 909.0356 710.5 909.0356 C
707.8336 924.3674 705.1664 939.7038 702.5 955.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1188.5 952.0356 m
1210.1645 942.3699 1231.8355 932.7013 1253.5 923.0356 C
1228.5025 898.0381 1203.4975 873.0331 1178.5 848.0356 C
1178.1667 848.0356 1177.8333 848.0356 1177.5 848.0356 C
1177.5 849.3688 1177.5 850.7024 1177.5 852.0356 C
1181.1663 885.3656 1184.8337 918.7056 1188.5 952.0356 C
f
*U
*u
1433.5 952.0356 m
1440.4587 944.7965 1440.3652 919.9354 1442.5 909.0356 C
1409.5033 905.7026 1376.4967 902.3686 1343.5 899.0356 C
1373.497 916.7005 1403.503 934.3707 1433.5 952.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
665.5 948.0356 m
692.164 888.7082 718.836 829.363 745.5 770.0356 C
723.6281 782.5649 682.5218 798.5527 666.5 816.0356 C
666.1667 860.0312 665.8333 904.04 665.5 948.0356 C
f
*U
*u
916.5 941.0356 m
939.831 938.3692 963.169 935.702 986.5 933.0356 C
999.4987 893.3729 1012.5013 853.6983 1025.5 814.0356 C
1025.1667 814.0356 1024.8333 814.0356 1024.5 814.0356 C
988.5036 856.3647 952.4964 898.7065 916.5 941.0356 C
f
*U
*u
802.5 937.0356 m
862.494 885.7074 922.506 834.3638 982.5 783.0356 C
896.8419 821.3651 811.1581 859.7061 725.5 898.0356 C
725.8333 898.7022 726.1667 899.369 726.5 900.0356 C
751.8308 912.3677 777.1692 924.7035 802.5 937.0356 C
f
*U
*u
1133.5 937.0356 m
1133.5 905.7054 1133.5 874.3658 1133.5 843.0356 C
1128.1672 830.0369 1122.8328 817.0343 1117.5 804.0356 C
1116.8334 804.0356 1116.1666 804.0356 1115.5 804.0356 C
1121.4994 848.3645 1127.5006 892.7067 1133.5 937.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1175.5 925.0356 m
1184.6015 913.4577 1163.4416 850.2203 1170.5 831.0356 C
1183.4987 843.701 1196.5013 856.3702 1209.5 869.0356 C
1209.8333 869.0356 1210.1667 869.0356 1210.5 869.0356 C
1210.5 868.7023 1210.5 868.3689 1210.5 868.0356 C
1173.1704 824.04 1135.8296 780.0312 1098.5 736.0356 C
1098.5 736.3689 1098.5 736.7023 1098.5 737.0356 C
1124.1641 799.696 1149.8359 862.3752 1175.5 925.0356 C
f
*U
*u
1261.5 919.0356 m
1280.4981 909.7032 1299.5019 900.368 1318.5 891.0356 C
1317.8334 891.0356 1317.1666 891.0356 1316.5 891.0356 C
1284.1699 864.3716 1251.8301 837.6996 1219.5 811.0356 C
1219.5 811.3689 1219.5 811.7023 1219.5 812.0356 C
1233.4986 847.6987 1247.5014 883.3725 1261.5 919.0356 C
f
*U
*u
1476.5 913.0356 m
1504.4972 904.7031 1532.5028 896.3681 1560.5 888.0356 C
1560.1667 887.369 1559.8333 886.7022 1559.5 886.0356 C
1500.8392 870.7038 1442.1608 855.3674 1383.5 840.0356 C
1383.8333 841.0355 1384.1667 842.0357 1384.5 843.0356 C
1415.1636 866.3666 1445.8364 889.7046 1476.5 913.0356 C
f
*U
*u
928.5 911.0356 m
959.4969 875.7058 990.5031 840.3654 1021.5 805.0356 C
1002.5019 809.7018 983.4981 814.3694 964.5 819.0356 C
952.5012 849.6992 940.4988 880.372 928.5 911.0356 C
f
*U
*u
1449.5 904.0356 m
1450.1666 904.0356 1450.8334 904.0356 1451.5 904.0356 C
1425.1693 882.7044 1398.8307 861.3668 1372.5 840.0356 C
1371.8334 840.0356 1371.1666 840.0356 1370.5 840.0356 C
1356.5014 857.7005 1342.4986 875.3707 1328.5 893.0356 C
1328.5 893.3689 1328.5 893.7023 1328.5 894.0356 C
1368.8293 897.3686 1409.1707 900.7026 1449.5 904.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
746.5 896.0356 m
746.1667 895.369 745.8333 894.7022 745.5 894.0356 C
746.1666 894.7022 746.8334 895.369 747.5 896.0356 C
747.1667 896.0356 746.8333 896.0356 746.5 896.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
715.5 895.0356 m
764.8284 872.0379 814.1716 849.0333 863.5 826.0356 C
863.5 825.369 863.5 824.7022 863.5 824.0356 C
818.1712 831.0349 772.8288 838.0363 727.5 845.0356 C
723.5004 861.7006 719.4996 878.3706 715.5 895.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1239.5 892.0356 m
1240.1666 892.0356 1240.8334 892.0356 1241.5 892.0356 C
1227.1681 856.3725 1212.8319 820.6987 1198.5 785.0356 C
1223.1642 789.7018 1247.8358 794.3694 1272.5 799.0356 C
1271.8334 798.7023 1271.1666 798.3689 1270.5 798.0356 C
1218.1719 767.7053 1165.8281 737.3659 1113.5 707.0356 C
1155.4958 768.6961 1197.5042 830.3751 1239.5 892.0356 C
f
*U
*u
1324.5 886.0356 m
1337.832 868.3707 1351.168 850.7005 1364.5 833.0356 C
1363.8334 833.0356 1363.1666 833.0356 1362.5 833.0356 C
1316.1713 821.3701 1269.8287 809.7011 1223.5 798.0356 C
1225.1665 800.0354 1226.8335 802.0358 1228.5 804.0356 C
1260.4968 831.3662 1292.5032 858.705 1324.5 886.0356 C
f
*U
*u
1012.5 878.0356 m
1027.1652 850.705 1041.8348 823.3662 1056.5 796.0356 C
1056.1667 796.0356 1055.8333 796.0356 1055.5 796.0356 C
1029.7052 809.8488 1020.3886 847.3949 1012.5 878.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1564.5 876.0356 m
1565.4999 848.0384 1566.5001 820.0328 1567.5 792.0356 C
1506.8394 797.7017 1446.1606 803.3695 1385.5 809.0356 C
1368.9958 811.6656 1332.35 806.2305 1321.5 816.0356 C
1402.4919 836.0336 1483.5081 856.0376 1564.5 876.0356 C
f
*U
*u
1112.5 857.0356 m
1109.5003 828.0385 1106.4997 799.0327 1103.5 770.0356 C
1091.9141 771.2475 1042.2655 772.7204 1036.5 778.0356 C
1046.1657 779.3688 1055.8343 780.7024 1065.5 782.0356 C
1081.1651 807.0331 1096.8349 832.0381 1112.5 857.0356 C
f
*U
*u
725.5 837.0356 m
773.4952 829.703 821.5048 822.3682 869.5 815.0356 C
868.8334 814.7023 868.1666 814.3689 867.5 814.0356 C
839.8361 803.37 812.1639 792.7012 784.5 782.0356 C
777.3932 779.3511 759.8888 771.0103 755.5 774.0356 C
745.501 795.0335 735.499 816.0377 725.5 837.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1184.5 827.0356 m
1185.1666 827.0356 1185.8334 827.0356 1186.5 827.0356 C
1159.836 788.3728 1133.164 749.6984 1106.5 711.0356 C
1106.5 711.7022 1106.5 712.369 1106.5 713.0356 C
1104.5002 717.0352 1102.4998 721.036 1100.5 725.0356 C
1128.4972 759.0322 1156.5028 793.039 1184.5 827.0356 C
f
*U
*u
888.5 811.0356 m
919.8302 798.0369 951.1698 785.0343 982.5 772.0356 C
980.8335 728.3733 979.1665 684.6979 977.5 641.0356 C
977.1667 641.7022 976.8333 642.369 976.5 643.0356 C
947.1696 699.03 917.8304 755.0412 888.5 811.0356 C
f
*U
*u
879.5 809.0356 m
890.438 802.0242 894.8232 780.508 901.5 769.0356 C
922.1646 729.7062 942.8354 690.365 963.5 651.0356 C
897.1733 688.3652 830.8267 725.706 764.5 763.0356 C
802.8295 778.3674 841.1705 793.7038 879.5 809.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1308.5 808.0356 m
1325.165 805.7025 1341.835 803.3687 1358.5 801.0356 C
1313.8378 787.3703 1269.1622 773.7009 1224.5 760.0356 C
1224.5 760.3689 1224.5 760.7023 1224.5 761.0356 C
1252.4972 776.7007 1280.5028 792.3705 1308.5 808.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
970.5 806.0356 m
999.1638 800.0362 1027.8362 794.035 1056.5 788.0356 C
1056.5 787.7023 1056.5 787.3689 1056.5 787.0356 C
1036.502 785.0358 1016.498 783.0354 996.5 781.0356 C
987.8342 789.3681 979.1658 797.7031 970.5 806.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
666.5 801.0356 m
763.157 748.0409 859.843 695.0303 956.5 642.0356 C
956.5 641.369 956.5 640.7022 956.5 640.0356 C
859.5097 659.7003 762.4903 679.3709 665.5 699.0356 C
665.8333 733.0322 666.1667 767.039 666.5 801.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1376.5 799.0356 m
1375.4945 792.3071 1323.2041 743.2202 1313.5 736.0356 C
1280.412 734.8473 1235.6963 731.6055 1215.5 749.0356 C
1269.1613 765.7006 1322.8387 782.3706 1376.5 799.0356 C
f
*U
*u
1391.5 798.0356 m
1437.4954 793.7027 1483.5046 789.3685 1529.5 785.0356 C
1529.5 784.7023 1529.5 784.3689 1529.5 784.0356 C
1461.5068 768.0372 1393.4932 752.034 1325.5 736.0356 C
1347.4978 756.7002 1369.5022 777.371 1391.5 798.0356 C
f
*U
*u
1566.5 783.0356 m
1567.1666 755.3717 1567.8334 727.6995 1568.5 700.0356 C
1487.1748 709.7013 1405.8252 719.3699 1324.5 729.0356 C
1325.1666 729.0356 1325.8334 729.0356 1326.5 729.0356 C
1406.492 747.0338 1486.508 765.0374 1566.5 783.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
999.5 773.0356 m
1014.0831 772.6833 1073.123 769.2533 1081.5 763.0356 C
1080.8334 763.0356 1080.1666 763.0356 1079.5 763.0356 C
1062.5017 755.0364 1045.4983 747.0348 1028.5 739.0356 C
1018.8343 750.3678 1009.1657 761.7034 999.5 773.0356 C
f
*U
*u
991.5 768.0356 m
1002.8322 755.7035 1014.1678 743.3677 1025.5 731.0356 C
1013.5012 708.3712 1001.4988 685.7 989.5 663.0356 C
988.8334 663.0356 988.1666 663.0356 987.5 663.0356 C
988.8332 698.0321 990.1668 733.0391 991.5 768.0356 C
f
*U
*u
1097.5 762.0356 m
1100.6294 758.1566 1090.6943 738.3656 1088.5 731.0356 C
1088.1667 731.0356 1087.8333 731.0356 1087.5 731.0356 C
1087.5 731.7022 1087.5 732.369 1087.5 733.0356 C
1084.5003 739.7016 1081.4997 746.3696 1078.5 753.0356 C
1084.8327 756.0353 1091.1673 759.0359 1097.5 762.0356 C
f
*U
*u
1068.5 751.0356 m
1073.8825 745.6458 1073.9529 705.5146 1071.5 698.0356 C
1060.8344 710.701 1050.1656 723.3702 1039.5 736.0356 C
1049.1657 741.0351 1058.8343 746.0361 1068.5 751.0356 C
f
*U
*u
1201.5 748.0356 m
1237.4964 687.375 1273.5036 626.6962 1309.5 566.0356 C
1244.8398 609.6979 1180.1602 653.3733 1115.5 697.0356 C
1115.8333 697.7022 1116.1667 698.369 1116.5 699.0356 C
1144.8305 715.3673 1173.1695 731.7039 1201.5 748.0356 C
f
*U
*u
1234.5 734.0356 m
1282.4952 717.7039 1330.5048 701.3673 1378.5 685.0356 C
1393.4985 652.7055 1408.5015 620.3657 1423.5 588.0356 C
1360.5063 636.6974 1297.4937 685.3738 1234.5 734.0356 C
f
*U
*u
1079.5 729.0356 m
1096.4983 706.7045 1113.5017 684.3667 1130.5 662.0356 C
1114.5016 596.7088 1098.4984 531.3624 1082.5 466.0356 C
1081.8334 466.0356 1081.1666 466.0356 1080.5 466.0356 C
1080.1667 553.6935 1079.8333 641.3777 1079.5 729.0356 C
f
*U
*u
1225.5 727.0356 m
1251.4974 707.0376 1277.5026 687.0336 1303.5 667.0356 C
1313.8323 627.3729 1324.1677 587.6983 1334.5 548.0356 C
1334.1667 548.0356 1333.8333 548.0356 1333.5 548.0356 C
1333.1667 548.7022 1332.8333 549.369 1332.5 550.0356 C
1296.8369 609.0297 1261.1631 668.0415 1225.5 727.0356 C
f
*U
*u
1031.5 724.0356 m
1038.8326 705.7041 1046.1674 687.3671 1053.5 669.0356 C
1014.1706 626.0399 974.8294 583.0313 935.5 540.0356 C
935.5 540.3689 935.5 540.7023 935.5 541.0356 C
967.4968 602.0295 999.5032 663.0417 1031.5 724.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1293.5 724.0356 m
1331.4962 719.3694 1369.5038 714.7018 1407.5 710.0356 C
1443.8297 689.0377 1480.1703 668.0335 1516.5 647.0356 C
1516.5 646.369 1516.5 645.7022 1516.5 645.0356 C
1516.1667 645.0356 1515.8333 645.0356 1515.5 645.0356 C
1459.8389 664.7003 1404.1611 684.3709 1348.5 704.0356 C
1333.327 709.9432 1303.5505 712.468 1293.5 724.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1039.5 722.0356 m
1049.8323 710.0368 1060.1677 698.0344 1070.5 686.0356 C
1066.5004 682.3693 1062.4996 678.7019 1058.5 675.0356 C
1052.1673 690.7007 1045.8327 706.3705 1039.5 722.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1416.5 711.0356 m
1467.8282 704.7029 1519.1718 698.3683 1570.5 692.0356 C
1560.501 675.3706 1550.499 658.7006 1540.5 642.0356 C
1499.1708 665.0333 1457.8292 688.0379 1416.5 711.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
663.5 691.0356 m
711.8285 680.7033 760.1715 670.3679 808.5 660.0356 C
808.5 659.369 808.5 658.7022 808.5 658.0356 C
768.8373 652.7028 729.1627 647.3684 689.5 642.0356 C
680.8342 658.3673 672.1658 674.7039 663.5 691.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1390.5 680.0356 m
1433.4957 664.0372 1476.5043 648.034 1519.5 632.0356 C
1519.5 631.7023 1519.5 631.3689 1519.5 631.0356 C
1492.8265 621.7814 1458.4901 585.6115 1433.5 583.0356 C
1419.1681 615.3657 1404.8319 647.7055 1390.5 680.0356 C
f
*U
*u
0.107637 0.081575 0.072999 0 k
1135.5 673.0356 m
1193.1609 634.0395 1250.8391 595.0317 1308.5 556.0356 C
1308.5 555.369 1308.5 554.7022 1308.5 554.0356 C
1308.1667 554.0356 1307.8333 554.0356 1307.5 554.0356 C
1266.8374 573.0337 1226.1626 592.0375 1185.5 611.0356 C
1168.835 631.7002 1152.165 652.371 1135.5 673.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1066.5 670.0356 m
1067.1666 670.0356 1067.8334 670.0356 1068.5 670.0356 C
1045.169 602.0424 1021.831 534.0288 998.5 466.0356 C
972.8359 481.3674 947.1641 496.7038 921.5 512.0356 C
925.4996 516.0352 929.5004 520.036 933.5 524.0356 C
977.8289 572.6974 1022.1711 621.3738 1066.5 670.0356 C
f
*U
*u
1311.5 662.0356 m
1311.8333 661.369 1312.1667 660.7022 1312.5 660.0356 C
1312.1667 660.7022 1311.8333 661.369 1311.5 662.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1314.5 661.0356 m
1325.7717 656.1355 1420.3758 583.8733 1424.5 576.0356 C
1399.5025 561.7037 1374.4975 547.3675 1349.5 533.0356 C
1349.5 533.7022 1349.5 534.369 1349.5 535.0356 C
1337.8345 577.0314 1326.1655 619.0398 1314.5 661.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1312.5 659.0356 m
1312.8333 658.0357 1313.1667 657.0355 1313.5 656.0356 C
1313.1667 656.0356 1312.8333 656.0356 1312.5 656.0356 C
1312.5 657.0355 1312.5 658.0357 1312.5 659.0356 C
f
*U
*u
829.5 656.0356 m
848.4981 652.036 867.5019 648.0352 886.5 644.0356 C
886.5 643.369 886.5 642.7022 886.5 642.0356 C
832.1721 640.7024 777.8279 639.3688 723.5 638.0356 C
723.5 638.3689 723.5 638.7023 723.5 639.0356 C
758.8298 644.7017 794.1702 650.3695 829.5 656.0356 C
f
*U
*u
1313.5 655.0356 m
1313.8333 654.369 1314.1667 653.7022 1314.5 653.0356 C
1314.1667 653.7022 1313.8333 654.369 1313.5 655.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1139.5 653.0356 m
1184.8288 597.3745 1230.1712 541.6967 1275.5 486.0356 C
1274.8334 486.0356 1274.1666 486.0356 1273.5 486.0356 C
1241.8365 467.3708 1210.1635 448.7004 1178.5 430.0356 C
1178.5 430.7022 1178.5 431.369 1178.5 432.0356 C
1165.5013 505.6949 1152.4987 579.3763 1139.5 653.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1314.5 651.0356 m
1314.8333 650.369 1315.1667 649.7022 1315.5 649.0356 C
1315.1667 649.7022 1314.8333 650.369 1314.5 651.0356 C
f
*U
*u
1315.5 648.0356 m
1315.8333 647.369 1316.1667 646.7022 1316.5 646.0356 C
1316.1667 646.7022 1315.8333 647.369 1315.5 648.0356 C
f
*U
*u
1316.5 644.0356 m
1316.8333 643.369 1317.1667 642.7022 1317.5 642.0356 C
1317.1667 642.7022 1316.8333 643.369 1316.5 644.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1067.5 642.0356 m
1074.2893 634.283 1069.5001 600.6832 1069.5 588.0356 C
1069.5 532.3745 1069.5 476.6967 1069.5 421.0356 C
1047.8355 434.3676 1026.1645 447.7036 1004.5 461.0356 C
1025.4979 521.3629 1046.5021 581.7083 1067.5 642.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1317.5 641.0356 m
1317.8333 640.0357 1318.1667 639.0355 1318.5 638.0356 C
1318.1667 638.0356 1317.8333 638.0356 1317.5 638.0356 C
1317.5 639.0355 1317.5 640.0357 1317.5 641.0356 C
f
*U
*u
1318.5 637.0356 m
1318.8333 636.369 1319.1667 635.7022 1319.5 635.0356 C
1319.1667 635.7022 1318.8333 636.369 1318.5 637.0356 C
f
*U
*u
894.5 635.0356 m
906.1655 634.7023 917.8345 634.3689 929.5 634.0356 C
928.8334 634.0356 928.1666 634.0356 927.5 634.0356 C
884.8376 615.7041 842.1624 597.3671 799.5 579.0356 C
771.5028 595.7006 743.4972 612.3706 715.5 629.0356 C
775.1607 631.0354 834.8393 633.0358 894.5 635.0356 C
f
*U
*u
942.5 634.0356 m
948.1661 633.0357 953.8339 632.0355 959.5 631.0356 C
958.8334 630.7023 958.1666 630.3689 957.5 630.0356 C
923.8367 617.7035 890.1633 605.3677 856.5 593.0356 C
856.5 593.7022 856.5 594.369 856.5 595.0356 C
885.1638 608.0343 913.8362 621.0369 942.5 634.0356 C
f
*U
*u
1319.5 633.0356 m
1319.8333 632.369 1320.1667 631.7022 1320.5 631.0356 C
1320.1667 631.7022 1319.8333 632.369 1319.5 633.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1165.5 423.0356 m
1137.5028 420.0359 1109.4972 417.0353 1081.5 414.0356 C
1098.4983 486.0284 1115.5017 558.0428 1132.5 630.0356 C
1132.8333 630.0356 1133.1667 630.0356 1133.5 630.0356 C
1144.1656 561.0425 1154.8344 492.0287 1165.5 423.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1320.5 630.0356 m
1320.8333 629.0357 1321.1667 628.0355 1321.5 627.0356 C
1321.1667 627.0356 1320.8333 627.0356 1320.5 627.0356 C
1320.5 628.0355 1320.5 629.0357 1320.5 630.0356 C
f
*U
*u
967.5 626.0356 m
968.4999 626.0356 969.5001 626.0356 970.5 626.0356 C
951.1686 589.0393 931.8314 552.0319 912.5 515.0356 C
880.8365 533.3671 849.1635 551.7041 817.5 570.0356 C
867.495 588.7004 917.505 607.3708 967.5 626.0356 C
f
*U
*u
1321.5 626.0356 m
1321.8333 625.369 1322.1667 624.7022 1322.5 624.0356 C
1322.1667 624.7022 1321.8333 625.369 1321.5 626.0356 C
f
*U
*u
1322.5 623.0356 m
1322.8333 622.0357 1323.1667 621.0355 1323.5 620.0356 C
1323.1667 620.0356 1322.8333 620.0356 1322.5 620.0356 C
1322.5 621.0355 1322.5 622.0357 1322.5 623.0356 C
f
*U
*u
1323.5 619.0356 m
1323.8333 618.369 1324.1667 617.7022 1324.5 617.0356 C
1324.1667 617.7022 1323.8333 618.369 1323.5 619.0356 C
f
*U
*u
1324.5 615.0356 m
1324.8333 614.369 1325.1667 613.7022 1325.5 613.0356 C
1325.1667 613.7022 1324.8333 614.369 1324.5 615.0356 C
f
*U
*u
1325.5 612.0356 m
1325.8333 611.0357 1326.1667 610.0355 1326.5 609.0356 C
1326.1667 609.0356 1325.8333 609.0356 1325.5 609.0356 C
1325.5 610.0355 1325.5 611.0357 1325.5 612.0356 C
f
*U
*u
1326.5 608.0356 m
1326.8333 607.369 1327.1667 606.7022 1327.5 606.0356 C
1327.1667 606.7022 1326.8333 607.369 1326.5 608.0356 C
f
*U
*u
1327.5 604.0356 m
1327.8333 603.369 1328.1667 602.7022 1328.5 602.0356 C
1328.1667 602.7022 1327.8333 603.369 1327.5 604.0356 C
f
*U
*u
1328.5 601.0356 m
1328.8333 600.369 1329.1667 599.7022 1329.5 599.0356 C
1329.1667 599.7022 1328.8333 600.369 1328.5 601.0356 C
f
*U
*u
0.304662 0.3617 0.436439 0.008209 k
1196.5 599.0356 m
1244.4952 575.3713 1292.5048 551.6999 1340.5 528.0356 C
1340.1667 527.369 1339.8333 526.7022 1339.5 526.0356 C
1322.7573 519.4 1292.0232 486.7675 1278.5 496.0356 C
1251.1694 530.3655 1223.8306 564.7057 1196.5 599.0356 C
f
*U
*u
0.022766 0.299992 0.675807 0 k
1329.5 597.0356 m
1329.8333 596.369 1330.1667 595.7022 1330.5 595.0356 C
1330.1667 595.7022 1329.8333 596.369 1329.5 597.0356 C
f
*U
*u
1330.5 594.0356 m
1330.8333 593.0357 1331.1667 592.0355 1331.5 591.0356 C
1331.1667 591.0356 1330.8333 591.0356 1330.5 591.0356 C
1330.5 592.0355 1330.5 593.0357 1330.5 594.0356 C
f
*U
*u
1331.5 590.0356 m
1331.8333 589.369 1332.1667 588.7022 1332.5 588.0356 C
1332.1667 588.7022 1331.8333 589.369 1331.5 590.0356 C
f
*U
*u
1332.5 586.0356 m
1332.8333 585.369 1333.1667 584.7022 1333.5 584.0356 C
1333.1667 584.7022 1332.8333 585.369 1332.5 586.0356 C
f
*U
*u
1333.5 583.0356 m
1333.8333 582.369 1334.1667 581.7022 1334.5 581.0356 C
1334.1667 581.7022 1333.8333 582.369 1333.5 583.0356 C
f
*U
*u
1334.5 579.0356 m
1334.8333 578.369 1335.1667 577.7022 1335.5 577.0356 C
1335.1667 577.7022 1334.8333 578.369 1334.5 579.0356 C
f
*U
*u
1335.5 576.0356 m
1335.8333 575.0357 1336.1667 574.0355 1336.5 573.0356 C
1336.1667 573.0356 1335.8333 573.0356 1335.5 573.0356 C
1335.5 574.0355 1335.5 575.0357 1335.5 576.0356 C
f
*U
*u
1336.5 572.0356 m
1336.8333 571.369 1337.1667 570.7022 1337.5 570.0356 C
1337.1667 570.7022 1336.8333 571.369 1336.5 572.0356 C
f
*U
*u
1419.5 572.0356 m
1420.1666 572.0356 1420.8334 572.0356 1421.5 572.0356 C
1420.8334 572.0356 1420.1666 572.0356 1419.5 572.0356 C
f
*U
*u
1337.5 568.0356 m
1337.8333 567.369 1338.1667 566.7022 1338.5 566.0356 C
1338.1667 566.7022 1337.8333 567.369 1337.5 568.0356 C
f
*U
*u
1338.5 565.0356 m
1338.8333 564.369 1339.1667 563.7022 1339.5 563.0356 C
1339.1667 563.7022 1338.8333 564.369 1338.5 565.0356 C
f
*U
*u
1407.5 565.0356 m
1408.1666 565.0356 1408.8334 565.0356 1409.5 565.0356 C
1408.8334 565.0356 1408.1666 565.0356 1407.5 565.0356 C
f
*U
*u
1402.5 562.0356 m
1403.1666 562.0356 1403.8334 562.0356 1404.5 562.0356 C
1403.8334 562.0356 1403.1666 562.0356 1402.5 562.0356 C
f
*U
*u
1339.5 561.0356 m
1339.8333 560.369 1340.1667 559.7022 1340.5 559.0356 C
1340.1667 559.7022 1339.8333 560.369 1339.5 561.0356 C
f
*U
*u
1340.5 558.0356 m
1340.8333 557.0357 1341.1667 556.0355 1341.5 555.0356 C
1341.1667 555.0356 1340.8333 555.0356 1340.5 555.0356 C
1340.5 556.0355 1340.5 557.0357 1340.5 558.0356 C
f
*U
*u
1390.5 555.0356 m
1391.1666 555.0356 1391.8334 555.0356 1392.5 555.0356 C
1391.8334 555.0356 1391.1666 555.0356 1390.5 555.0356 C
f
*U
*u
1341.5 554.0356 m
1341.8333 553.369 1342.1667 552.7022 1342.5 552.0356 C
1342.1667 552.7022 1341.8333 553.369 1341.5 554.0356 C
f
*U
*u
1342.5 550.0356 m
1342.8333 549.369 1343.1667 548.7022 1343.5 548.0356 C
1343.1667 548.7022 1342.8333 549.369 1342.5 550.0356 C
f
*U
*u
1378.5 548.0356 m
1379.1666 548.0356 1379.8334 548.0356 1380.5 548.0356 C
1379.8334 548.0356 1379.1666 548.0356 1378.5 548.0356 C
f
*U
*u
1343.5 547.0356 m
1343.8333 546.0357 1344.1667 545.0355 1344.5 544.0356 C
1344.1667 544.0356 1343.8333 544.0356 1343.5 544.0356 C
1343.5 545.0355 1343.5 546.0357 1343.5 547.0356 C
f
*U
*u
1344.5 543.0356 m
1344.8333 542.369 1345.1667 541.7022 1345.5 541.0356 C
1345.1667 541.7022 1344.8333 542.369 1344.5 543.0356 C
f
*U
*u
1366.5 541.0356 m
1367.1666 541.0356 1367.8334 541.0356 1368.5 541.0356 C
1367.8334 541.0356 1367.1666 541.0356 1366.5 541.0356 C
f
*U
*u
1345.5 540.0356 m
1345.8333 539.0357 1346.1667 538.0355 1346.5 537.0356 C
1346.1667 537.0356 1345.8333 537.0356 1345.5 537.0356 C
1345.5 538.0355 1345.5 539.0357 1345.5 540.0356 C
f
*U
*u
1346.5 536.0356 m
1346.8333 535.369 1347.1667 534.7022 1347.5 534.0356 C
1347.1667 534.7022 1346.8333 535.369 1346.5 536.0356 C
f
*U
*u
1347.5 532.0356 m
1347.8333 531.369 1348.1667 530.7022 1348.5 530.0356 C
1348.1667 530.7022 1347.8333 531.369 1347.5 532.0356 C
f
*U
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Layer 2) Ln
0 A
u
u
u
*u
%AI3_Note:
0 O
0.626581 0 1 0 k
0 J 0 j 1 w 10 M []0 d0 XR
461.1299 299.3893 m
461.1299 249.8405 L
518.3899 249.8405 L
518.3899 299.3893 L
533.8466 299.3893 L
533.8466 180.9642 L
518.3899 180.9642 L
518.3899 236.487 L
461.1299 236.487 L
461.1299 180.9642 L
445.8489 180.9642 L
445.8489 299.3893 L
461.1299 299.3893 l
f
*U
U
U
u
u
*u
579.5095 218.2137 m
567.2144 180.9642 L
551.4065 180.9642 L
591.6289 299.3893 L
610.0715 299.3893 L
650.4697 180.9642 L
634.1348 180.9642 L
621.4884 218.2137 L
579.5095 218.2137 l
f
1 D
618.3268 230.1616 m
606.7343 264.2484 L
604.0997 271.9794 602.3432 279.0076 600.5868 285.86 c
600.2355 285.86 L
598.4791 278.8318 596.547 271.628 594.2636 264.4241 c
582.6711 230.1616 L
618.3268 230.1616 l
f
*U
U
U
u
u
*u
0 D
747.949 184.8297 m
742.3284 182.0184 731.0872 179.2072 716.6844 179.2072 c
683.312 179.2072 658.1949 200.2917 658.1949 239.1225 c
658.1949 276.1963 683.312 301.3221 720.0216 301.3221 c
734.7757 301.3221 744.0848 298.1594 748.1246 296.051 c
744.4361 283.5759 L
738.6399 286.3872 730.3846 288.4956 720.5485 288.4956 c
692.7968 288.4956 674.3542 270.7495 674.3542 239.6497 c
674.3542 210.6583 691.0403 192.0336 719.8459 192.0336 c
729.1551 192.0336 738.6399 193.9664 744.7874 196.9534 C
747.949 184.8297 l
f
*U
*u
767.089 299.3893 m
782.3701 299.3893 L
782.3701 242.2852 L
782.897 242.2852 L
786.0586 246.8536 789.2202 251.0705 792.2061 254.936 c
828.3887 299.3893 L
847.3583 299.3893 L
804.5012 249.1377 L
850.6956 180.9642 L
832.6042 180.9642 L
793.6113 239.1225 L
782.3701 226.1204 L
782.3701 180.9642 L
767.089 180.9642 L
767.089 299.3893 l
f
*U
*u
923.5837 236.487 m
877.5651 236.487 L
877.5651 193.7907 L
928.8531 193.7907 L
928.8531 180.9642 L
862.2841 180.9642 L
862.2841 299.3893 L
926.2184 299.3893 L
926.2184 286.5629 L
877.5651 286.5629 L
877.5651 249.1377 L
923.5837 249.1377 L
923.5837 236.487 l
f
*U
*u
948.6965 297.808 m
958.0057 299.2136 969.0713 300.2679 981.1907 300.2679 c
1003.1462 300.2679 1018.7785 295.1724 1029.1415 285.5087 c
1039.6802 275.8449 1045.8276 262.1399 1045.8276 242.9881 c
1045.8276 223.6605 1039.8557 207.8471 1028.7902 196.9534 c
1017.7246 185.8839 999.4576 179.91 976.4483 179.91 c
965.5583 179.91 956.4249 180.4371 948.6965 181.3156 C
948.6965 297.808 l
f
1 D
963.9776 193.0878 m
967.8417 192.385 973.4623 192.2093 979.4343 192.2093 c
1012.104 192.2093 1029.844 210.4826 1029.844 242.4609 c
1030.0198 270.398 1014.2117 288.1442 981.8932 288.1442 c
973.9893 288.1442 968.0174 287.4414 963.9776 286.5629 C
963.9776 193.0878 l
f
*U
U
U
u
u
*u
0 D
1102.9031 297.808 m
1109.5776 299.2136 1120.1162 300.2679 1130.8306 300.2679 c
1146.1116 300.2679 1155.9476 297.6323 1163.3247 291.6583 c
1169.4722 287.09 1173.1606 280.0618 1173.1606 270.7495 c
1173.1606 259.3286 1165.608 249.3134 1153.1373 244.7451 c
1153.1373 244.3937 L
1164.3785 241.5824 1177.5518 232.2701 1177.5518 214.6996 c
1177.5518 204.5087 1173.512 196.7776 1167.54 190.9794 c
1159.2848 183.4241 1145.9359 179.91 1126.6151 179.91 c
1116.0764 179.91 1107.9968 180.6128 1102.9031 181.3156 C
1102.9031 297.808 l
f
1 D
1118.1842 249.3134 m
1132.0601 249.3134 L
1148.2192 249.3134 1157.7041 257.7473 1157.7041 269.1681 c
1157.7041 283.0488 1147.1654 288.4956 1131.7087 288.4956 c
1124.683 288.4956 1120.6432 287.9685 1118.1842 287.4414 C
1118.1842 249.3134 l
f
1118.1842 192.5607 m
1121.1702 192.0336 1125.5612 191.8579 1131.0061 191.8579 c
1146.8141 191.8579 1161.3926 197.6562 1161.3926 214.8753 c
1161.3926 231.0401 1147.5167 237.7169 1130.8306 237.7169 c
1118.1842 237.7169 L
1118.1842 192.5607 l
f
*U
U
U
u
u
*u
0 D
1221.8103 180.9642 m
1221.8103 231.2158 L
1184.3981 299.3893 L
1201.7869 299.3893 L
1218.473 266.7082 L
1223.0398 257.7473 1226.5526 250.5434 1230.2412 242.2852 c
1230.5925 242.2852 L
1233.9297 250.0163 1237.9695 257.7473 1242.5363 266.7082 c
1259.5737 299.3893 L
1276.9624 299.3893 L
1237.267 231.3915 L
1237.267 180.9642 L
1221.8103 180.9642 l
f
*U
*u
1392.5282 180.9642 m
1377.4229 207.1442 L
1371.2753 217.1594 1367.4111 223.6605 1363.7227 230.513 c
1363.3713 230.513 L
1360.0341 223.6605 1356.6969 217.3351 1350.5493 206.9685 c
1336.3221 180.9642 L
1318.7578 180.9642 L
1354.9404 240.8796 L
1320.163 299.3893 L
1337.903 299.3893 L
1353.5353 271.628 L
1357.9264 263.8969 1361.2635 257.923 1364.4252 251.5976 c
1364.9521 251.5976 L
1368.2893 258.6258 1371.2753 264.0726 1375.6664 271.628 c
1391.8257 299.3893 L
1409.39 299.3893 L
1373.3831 241.7581 L
1410.2683 180.9642 L
1392.5282 180.9642 l
f
*U
*u
1428.0054 297.808 m
1437.3145 299.2136 1448.3801 300.2679 1460.4995 300.2679 c
1482.455 300.2679 1498.0873 295.1724 1508.4503 285.5087 c
1518.9889 275.8449 1525.1365 262.1399 1525.1365 242.9881 c
1525.1365 223.6605 1519.1646 207.8471 1508.099 196.9534 c
1497.0334 185.8839 1478.7665 179.91 1455.7571 179.91 c
1444.8672 179.91 1435.7336 180.4371 1428.0054 181.3156 C
1428.0054 297.808 l
f
1 D
1443.2864 193.0878 m
1447.1506 192.385 1452.7712 192.2093 1458.743 192.2093 c
1491.4128 192.2093 1509.1528 210.4826 1509.1528 242.4609 c
1509.3285 270.398 1493.5205 288.1442 1461.2021 288.1442 c
1453.2981 288.1442 1447.3262 287.4414 1443.2864 286.5629 C
1443.2864 193.0878 l
f
*U
*u
0 D
1542.8706 199.5889 m
1549.7207 195.372 1559.7324 191.8579 1570.2711 191.8579 c
1585.9034 191.8579 1595.0369 200.116 1595.0369 212.064 c
1595.0369 223.1334 1588.7137 229.4588 1572.7301 235.6084 c
1553.4093 242.4609 1541.4656 252.4761 1541.4656 269.1681 c
1541.4656 287.6171 1556.7466 301.3221 1579.7559 301.3221 c
1591.8752 301.3221 1600.6575 298.5108 1605.9268 295.5238 c
1601.7114 283.0488 L
1597.8472 285.1572 1589.9432 288.6713 1579.229 288.6713 c
1563.0697 288.6713 1556.9221 279.0076 1556.9221 270.9251 c
1556.9221 259.8557 1564.1235 254.4089 1580.4585 248.0835 c
1600.4819 240.3525 1610.6692 230.6887 1610.6692 213.2939 c
1610.6692 195.0206 1597.1447 179.2072 1569.2173 179.2072 c
1557.8004 179.2072 1545.3297 182.5455 1539.0065 186.7625 C
1542.8706 199.5889 l
f
*U
*u
1692.8676 236.487 m
1646.8489 236.487 L
1646.8489 193.7907 L
1698.1368 193.7907 L
1698.1368 180.9642 L
1631.5679 180.9642 L
1631.5679 299.3893 L
1695.5022 299.3893 L
1695.5022 286.5629 L
1646.8489 286.5629 L
1646.8489 249.1377 L
1692.8676 249.1377 L
1692.8676 236.487 l
f
*U
*u
1800.7086 184.8297 m
1795.088 182.0184 1783.8468 179.2072 1769.4441 179.2072 c
1736.0717 179.2072 1710.9546 200.2917 1710.9546 239.1225 c
1710.9546 276.1963 1736.0717 301.3221 1772.7813 301.3221 c
1787.5354 301.3221 1796.8445 298.1594 1800.8843 296.051 c
1797.1958 283.5759 L
1791.3995 286.3872 1783.1443 288.4956 1773.3081 288.4956 c
1745.5564 288.4956 1727.1138 270.7495 1727.1138 239.6497 c
1727.1138 210.6583 1743.8 192.0336 1772.6056 192.0336 c
1781.9148 192.0336 1791.3995 193.9664 1797.5471 196.9534 C
1800.7086 184.8297 l
f
*U
U
U
U
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 3 79 79 255 0 50 Lb
(Layer 4) Ln
0 A
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
